{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=_default;Object.defineProperty(exports,\"DEFAULT_ICON_COLOR\",{enumerable:true,get:function get(){return _createIconSet.DEFAULT_ICON_COLOR;}});Object.defineProperty(exports,\"DEFAULT_ICON_SIZE\",{enumerable:true,get:function get(){return _createIconSet.DEFAULT_ICON_SIZE;}});var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _react=_interopRequireDefault(require(\"react\"));var _Text=_interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));var Font=_interopRequireWildcard(require(\"expo-font\"));var _createIconSet=_interopRequireWildcard(require(\"./vendor/react-native-vector-icons/lib/create-icon-set\"));var _iconButton=_interopRequireDefault(require(\"./vendor/react-native-vector-icons/lib/icon-button\"));function _default(glyphMap,fontName,expoAssetId,fontStyle){var _a;var font=(0,_defineProperty2.default)({},fontName,expoAssetId);var RNVIconComponent=(0,_createIconSet.default)(glyphMap,fontName,null,fontStyle);return _a=function(_React$Component){(0,_inherits2.default)(Icon,_React$Component);function Icon(){var _this;(0,_classCallCheck2.default)(this,Icon);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Icon).apply(this,arguments));_this._mounted=false;_this.state={fontIsLoaded:Font.isLoaded(fontName)};return _this;}(0,_createClass2.default)(Icon,[{key:\"componentDidMount\",value:function componentDidMount(){return _regenerator.default.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:this._mounted=true;if(this.state.fontIsLoaded){_context.next=5;break;}_context.next=4;return _regenerator.default.awrap(Font.loadAsync(font));case 4:this._mounted&&this.setState({fontIsLoaded:true});case 5:case\"end\":return _context.stop();}}},null,this);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;}},{key:\"setNativeProps\",value:function setNativeProps(props){if(this._icon){this._icon.setNativeProps(props);}}},{key:\"render\",value:function render(){var _this2=this;if(!this.state.fontIsLoaded){return _react.default.createElement(_Text.default,null);}return _react.default.createElement(RNVIconComponent,(0,_extends2.default)({ref:function ref(view){_this2._icon=view;}},this.props));}}]);return Icon;}(_react.default.Component),_a.propTypes=RNVIconComponent.propTypes,_a.defaultProps=RNVIconComponent.defaultProps,_a.Button=(0,_iconButton.default)(_a),_a.glyphMap=glyphMap,_a.getRawGlyphMap=function(){return glyphMap;},_a.getFontFamily=function(){return fontName;},_a.loadFont=function(){return Font.loadAsync(font);},_a.font=font,_a;}","map":{"version":3,"sources":["../src/createIconSet.tsx"],"names":[],"mappings":"utCAAA,oD,gFAEA,uDACA,8GACA,sGAOc,kBAAU,QAAV,CAAoB,QAApB,CAA8B,WAA9B,CAA2C,SAA3C,CAA0D,C,OACtE,GAAM,CAAA,IAAI,iCAAM,QAAN,CAAiB,WAAjB,CAAV,CACA,GAAM,CAAA,gBAAgB,CAAG,2BAAc,QAAd,CAAwB,QAAxB,CAAkC,IAAlC,CAAwC,SAAxC,CAAzB,CAEA,MAAA,CAAA,EAAA,0EAAO,eAAA,mD,6GAUL,MAAA,QAAA,CAAW,KAAX,CAGA,MAAA,KAAA,CAAQ,CACN,YAAY,CAAE,IAAI,CAAC,QAAL,CAAc,QAAd,CADR,CAAR,CAbK,aAiDN,CAjDD,wNAkBI,KAAK,QAAL,CAAgB,IAAhB,CAlBJ,GAmBS,KAAK,KAAL,CAAW,YAnBpB,2EAoBY,IAAI,CAAC,SAAL,CAAe,IAAf,CApBZ,SAqBM,KAAK,QAAL,EAAiB,KAAK,QAAL,CAAc,CAAE,YAAY,CAAE,IAAhB,CAAd,CAAjB,CArBN,2HAyBsB,CAClB,KAAK,QAAL,CAAgB,KAAhB,CACD,CA3BH,sDA6BiB,KA7BjB,CA6BsB,CAClB,GAAI,KAAK,KAAT,CAAgB,CACd,KAAK,KAAL,CAAW,cAAX,CAA0B,KAA1B,EACD,CACF,CAjCH,uCAmCQ,iBACJ,GAAI,CAAC,KAAK,KAAL,CAAW,YAAhB,CAA8B,CAC5B,MAAO,8BAAC,aAAD,MAAP,CACD,CAED,MACE,8BAAC,gBAAD,wBACE,GAAG,CAAE,aAAA,IAAI,CAAG,CACV,MAAI,CAAC,KAAL,CAAa,IAAb,CACD,CAHH,EAIM,KAAK,KAJX,EADF,CAQD,CAhDH,kBAA0B,eAAM,SAAhC,CAAA,CACS,EAAA,CAAA,SAAA,CAAY,gBAAgB,CAAC,SADtC,CAES,EAAA,CAAA,YAAA,CAAe,gBAAgB,CAAC,YAFzC,CAGS,EAAA,CAAA,MAAA,CAAS,wBAA0B,EAA1B,CAHlB,CAIS,EAAA,CAAA,QAAA,CAAW,QAJpB,CAKS,EAAA,CAAA,cAAA,CAAiB,iBAAM,CAAA,QAAN,EAL1B,CAMS,EAAA,CAAA,aAAA,CAAgB,iBAAM,CAAA,QAAN,EANzB,CAOS,EAAA,CAAA,QAAA,CAAW,iBAAM,CAAA,IAAI,CAAC,SAAL,CAAe,IAAf,CAAN,EAPpB,CAQS,EAAA,CAAA,IAAA,CAAO,IARhB,CAiDE,EAjDF,CAkDD","sourcesContent":["import React from \"react\";\nimport { Text } from \"react-native\";\nimport * as Font from \"expo-font\";\nimport createIconSet from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\nimport createIconButtonComponent from \"./vendor/react-native-vector-icons/lib/icon-button\";\n\nexport {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE\n} from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\n\nexport default function(glyphMap, fontName, expoAssetId, fontStyle?: any) {\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n\n  return class Icon extends React.Component {\n    static propTypes = RNVIconComponent.propTypes;\n    static defaultProps = RNVIconComponent.defaultProps;\n    static Button = createIconButtonComponent(Icon);\n    static glyphMap = glyphMap;\n    static getRawGlyphMap = () => glyphMap;\n    static getFontFamily = () => fontName;\n    static loadFont = () => Font.loadAsync(font);\n    static font = font;\n\n    _mounted = false;\n    _icon?: any;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName)\n    };\n\n    async componentDidMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={view => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}