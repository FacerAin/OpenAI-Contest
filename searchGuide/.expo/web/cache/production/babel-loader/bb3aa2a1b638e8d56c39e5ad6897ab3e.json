{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var id=0;var requests={};var ImageLoader={abort:function abort(requestId){var image=requests[\"\"+requestId];if(image){image.onerror=image.onload=image=null;delete requests[\"\"+requestId];}},getSize:function getSize(uri,success,failure){var complete=false;var interval=setInterval(callback,16);var requestId=ImageLoader.load(uri,callback,errorCallback);function callback(){var image=requests[\"\"+requestId];if(image){var naturalHeight=image.naturalHeight,naturalWidth=image.naturalWidth;if(naturalHeight&&naturalWidth){success(naturalWidth,naturalHeight);complete=true;}}if(complete){ImageLoader.abort(requestId);clearInterval(interval);}}function errorCallback(){if(typeof failure==='function'){failure();}ImageLoader.abort(requestId);clearInterval(interval);}},load:function load(uri,onLoad,onError){id+=1;var image=new window.Image();image.onerror=onError;image.onload=function(e){var onDecode=function onDecode(){return onLoad(e);};if(typeof image.decode==='function'){image.decode().then(onDecode,onDecode);}else{setTimeout(onDecode,0);}};image.src=uri;requests[\"\"+id]=image;return id;},prefetch:function prefetch(uri){return new Promise(function(resolve,reject){ImageLoader.load(uri,resolve,reject);});}};var _default=ImageLoader;exports.default=_default;","map":{"version":3,"sources":["C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/node_modules/react-native-web/dist/modules/ImageLoader/index.js"],"names":["id","requests","ImageLoader","abort","requestId","image","onerror","onload","getSize","uri","success","failure","complete","interval","setInterval","callback","load","errorCallback","naturalHeight","naturalWidth","clearInterval","onLoad","onError","window","Image","e","onDecode","decode","then","setTimeout","src","prefetch","Promise","resolve","reject"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar id = 0;\nvar requests = {};\nvar ImageLoader = {\n  abort: function abort(requestId) {\n    var image = requests[\"\" + requestId];\n\n    if (image) {\n      image.onerror = image.onload = image = null;\n      delete requests[\"\" + requestId];\n    }\n  },\n  getSize: function getSize(uri, success, failure) {\n    var complete = false;\n    var interval = setInterval(callback, 16);\n    var requestId = ImageLoader.load(uri, callback, errorCallback);\n\n    function callback() {\n      var image = requests[\"\" + requestId];\n\n      if (image) {\n        var naturalHeight = image.naturalHeight,\n            naturalWidth = image.naturalWidth;\n\n        if (naturalHeight && naturalWidth) {\n          success(naturalWidth, naturalHeight);\n          complete = true;\n        }\n      }\n\n      if (complete) {\n        ImageLoader.abort(requestId);\n        clearInterval(interval);\n      }\n    }\n\n    function errorCallback() {\n      if (typeof failure === 'function') {\n        failure();\n      }\n\n      ImageLoader.abort(requestId);\n      clearInterval(interval);\n    }\n  },\n  load: function load(uri, onLoad, onError) {\n    id += 1;\n    var image = new window.Image();\n    image.onerror = onError;\n\n    image.onload = function (e) {\n      // avoid blocking the main thread\n      var onDecode = function onDecode() {\n        return onLoad(e);\n      };\n\n      if (typeof image.decode === 'function') {\n        // Safari currently throws exceptions when decoding svgs.\n        // We want to catch that error and allow the load handler\n        // to be forwarded to the onLoad handler in this case\n        image.decode().then(onDecode, onDecode);\n      } else {\n        setTimeout(onDecode, 0);\n      }\n    };\n\n    image.src = uri;\n    requests[\"\" + id] = image;\n    return id;\n  },\n  prefetch: function prefetch(uri) {\n    return new Promise(function (resolve, reject) {\n      ImageLoader.load(uri, resolve, reject);\n    });\n  }\n};\nexport default ImageLoader;"]},"metadata":{},"sourceType":"script"}