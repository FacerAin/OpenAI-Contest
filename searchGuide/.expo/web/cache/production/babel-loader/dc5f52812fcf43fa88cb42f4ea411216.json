{"ast":null,"code":"'use strict';var validateFormat=process.env.NODE_ENV!==\"production\"?function(format){}:function(format){if(format===undefined){throw new Error('invariant(...): Second argument must be a string.');}};function invariant(condition,format){for(var _len=arguments.length,args=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}validateFormat(format);if(!condition){var error;if(format===undefined){error=new Error('Minified exception occurred; use the non-minified dev environment '+'for the full error message and additional helpful warnings.');}else{var argIndex=0;error=new Error(format.replace(/%s/g,function(){return String(args[argIndex++]);}));error.name='Invariant Violation';}error.framesToPop=1;throw error;}}module.exports=invariant;","map":{"version":3,"sources":["C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/node_modules/react-native-web/node_modules/fbjs/lib/invariant.js"],"names":["validateFormat","process","env","NODE_ENV","format","undefined","Error","invariant","condition","_len","arguments","length","args","Array","_key","error","argIndex","replace","String","name","framesToPop","module","exports"],"mappings":"AAQA,aAEA,GAAIA,CAAAA,cAAc,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,CAAwC,SAAUC,MAAV,CAAkB,CAAE,CAA5D,CAA+D,SAAUA,MAAV,CAAkB,CACpG,GAAIA,MAAM,GAAKC,SAAf,CAA0B,CACxB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,mDAAV,CAAN,CACD,CACF,CAJD,CAeA,QAASC,CAAAA,SAAT,CAAmBC,SAAnB,CAA8BJ,MAA9B,CAAsC,CACpC,IAAK,GAAIK,CAAAA,IAAI,CAAGC,SAAS,CAACC,MAArB,CAA6BC,IAAI,CAAG,GAAIC,CAAAA,KAAJ,CAAUJ,IAAI,CAAG,CAAP,CAAWA,IAAI,CAAG,CAAlB,CAAsB,CAAhC,CAApC,CAAwEK,IAAI,CAAG,CAApF,CAAuFA,IAAI,CAAGL,IAA9F,CAAoGK,IAAI,EAAxG,CAA4G,CAC1GF,IAAI,CAACE,IAAI,CAAG,CAAR,CAAJ,CAAiBJ,SAAS,CAACI,IAAD,CAA1B,CACD,CAEDd,cAAc,CAACI,MAAD,CAAd,CAEA,GAAI,CAACI,SAAL,CAAgB,CACd,GAAIO,CAAAA,KAAJ,CAEA,GAAIX,MAAM,GAAKC,SAAf,CAA0B,CACxBU,KAAK,CAAG,GAAIT,CAAAA,KAAJ,CAAU,qEAAuE,6DAAjF,CAAR,CACD,CAFD,IAEO,CACL,GAAIU,CAAAA,QAAQ,CAAG,CAAf,CACAD,KAAK,CAAG,GAAIT,CAAAA,KAAJ,CAAUF,MAAM,CAACa,OAAP,CAAe,KAAf,CAAsB,UAAY,CAClD,MAAOC,CAAAA,MAAM,CAACN,IAAI,CAACI,QAAQ,EAAT,CAAL,CAAb,CACD,CAFiB,CAAV,CAAR,CAGAD,KAAK,CAACI,IAAN,CAAa,qBAAb,CACD,CAEDJ,KAAK,CAACK,WAAN,CAAoB,CAApB,CAEA,KAAML,CAAAA,KAAN,CACD,CACF,CAEDM,MAAM,CAACC,OAAP,CAAiBf,SAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nvar validateFormat = process.env.NODE_ENV !== \"production\" ? function (format) {} : function (format) {\n  if (format === undefined) {\n    throw new Error('invariant(...): Second argument must be a string.');\n  }\n};\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments to provide\n * information about what broke and what you were expecting.\n *\n * The invariant message will be stripped in production, but the invariant will\n * remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return String(args[argIndex++]);\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // Skip invariant's own stack frame.\n\n    throw error;\n  }\n}\n\nmodule.exports = invariant;"]},"metadata":{},"sourceType":"script"}