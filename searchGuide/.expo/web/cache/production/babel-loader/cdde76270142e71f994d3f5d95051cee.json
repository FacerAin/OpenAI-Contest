{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.TOUCHABLE_STATE=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireWildcard(require(\"react\"));var _Animated=_interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));var _Platform=_interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));var _GestureHandler=require(\"../GestureHandler\");var _propTypes=_interopRequireDefault(require(\"prop-types\"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var TOUCHABLE_STATE={UNDETERMINED:0,BEGAN:1,MOVED_OUTSIDE:2};exports.TOUCHABLE_STATE=TOUCHABLE_STATE;var PublicPropTypes={accessible:_propTypes.default.bool,accessibilityLabel:_propTypes.default.node,accessibilityHint:_propTypes.default.string,hitSlop:_propTypes.default.shape({top:_propTypes.default.number,left:_propTypes.default.number,bottom:_propTypes.default.number,right:_propTypes.default.number}),disabled:_propTypes.default.bool,onPress:_propTypes.default.func,onPressIn:_propTypes.default.func,onPressOut:_propTypes.default.func,onLayout:_propTypes.default.func,onLongPress:_propTypes.default.func,nativeID:_propTypes.default.string,testID:_propTypes.default.string,delayPressIn:_propTypes.default.number,delayPressOut:_propTypes.default.number,delayLongPress:_propTypes.default.number};var InternalPropTypes={extraButtonProps:_propTypes.default.object,onStateChange:_propTypes.default.func};var GenericTouchable=function(_Component){(0,_inherits2.default)(GenericTouchable,_Component);function GenericTouchable(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,GenericTouchable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(GenericTouchable)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.longPressDetected=false;_this.pointerInside=true;_this.STATE=TOUCHABLE_STATE.UNDETERMINED;_this.handlePressIn=function(){if(_this.props.delayPressIn){_this.pressInTimeout=setTimeout(function(){_this.moveToState(TOUCHABLE_STATE.BEGAN);_this.pressInTimeout=null;},_this.props.delayPressIn);}else{_this.moveToState(TOUCHABLE_STATE.BEGAN);}if(_this.props.onLongPress){var time=(_this.props.delayPressIn||0)+(_this.props.delayLongPress||0);_this.longPressTimeout=setTimeout(_this.onLongPressDetected,time);}};_this.handleMoveOutside=function(){if(_this.props.delayPressOut){_this.pressOutTimeout=_this.pressOutTimeout||setTimeout(function(){_this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);_this.pressOutTimeout=null;},_this.props.delayPressOut);}else{_this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);}};_this.handleGoToUndetermined=function(){clearTimeout(_this.pressOutTimeout);if(_this.props.delayPressOut){_this.pressOutTimeout=setTimeout(function(){if(_this.STATE===TOUCHABLE_STATE.UNDETERMINED){_this.moveToState(TOUCHABLE_STATE.BEGAN);}_this.moveToState(TOUCHABLE_STATE.UNDETERMINED);_this.pressOutTimeout=null;},_this.props.delayPressOut);}else{if(_this.STATE===TOUCHABLE_STATE.UNDETERMINED){_this.moveToState(TOUCHABLE_STATE.BEGAN);}_this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}};_this.moveToState=function(newState){if(newState===_this.STATE){return;}if(newState===TOUCHABLE_STATE.BEGAN){_this.props.onPressIn&&_this.props.onPressIn();}else if(newState===TOUCHABLE_STATE.MOVED_OUTSIDE){_this.props.onPressOut&&_this.props.onPressOut();}else if(newState===TOUCHABLE_STATE.UNDETERMINED){_this.reset();if(_this.STATE===TOUCHABLE_STATE.BEGAN){_this.props.onPressOut&&_this.props.onPressOut();}}_this.props.onStateChange&&_this.props.onStateChange(_this.STATE,newState);_this.STATE=newState;};_this.onGestureEvent=function(_ref){var pointerInside=_ref.nativeEvent.pointerInside;if(_this.pointerInside!==pointerInside){if(pointerInside){_this.onMoveIn();}else{_this.onMoveOut();}}_this.pointerInside=pointerInside;};_this.onHandlerStateChange=function(_ref2){var nativeEvent=_ref2.nativeEvent;var state=nativeEvent.state;if(state===_GestureHandler.State.CANCELLED||state===_GestureHandler.State.FAILED){_this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}else if(state===(_Platform.default.OS==='ios'?_GestureHandler.State.ACTIVE:_GestureHandler.State.BEGAN)&&_this.STATE===TOUCHABLE_STATE.UNDETERMINED){_this.handlePressIn();}else if(state===_GestureHandler.State.END){var shouldCallOnPress=!_this.longPressDetected&&_this.STATE!==TOUCHABLE_STATE.MOVED_OUTSIDE&&_this.pressOutTimeout===null;_this.handleGoToUndetermined();if(shouldCallOnPress){_this.props.onPress&&_this.props.onPress();}}};_this.onLongPressDetected=function(){_this.longPressDetected=true;_this.props.onLongPress();};_this.onMoveIn=function(){if(_this.STATE===TOUCHABLE_STATE.MOVED_OUTSIDE){_this.moveToState(TOUCHABLE_STATE.BEGAN);}};_this.onMoveOut=function(){clearTimeout(_this.longPressTimeout);_this.longPressTimeout=null;if(_this.STATE===TOUCHABLE_STATE.BEGAN){_this.handleMoveOutside();}};return _this;}(0,_createClass2.default)(GenericTouchable,[{key:\"componentDidMount\",value:function componentDidMount(){this.reset();}},{key:\"reset\",value:function reset(){this.longPressDetected=false;this.pointerInside=true;clearTimeout(this.pressInTimeout);clearTimeout(this.pressOutTimeout);clearTimeout(this.longPressTimeout);this.pressOutTimeout=null;this.longPressTimeout=null;this.pressInTimeout=null;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.reset();}},{key:\"render\",value:function render(){var coreProps={accessible:this.props.accessible!==false,accessibilityLabel:this.props.accessibilityLabel,accessibilityHint:this.props.accessibilityHint,accessibilityComponentType:this.props.accessibilityComponentType,accessibilityRole:this.props.accessibilityRole,accessibilityStates:this.props.accessibilityStates,accessibilityTraits:this.props.accessibilityTraits,nativeID:this.props.nativeID,testID:this.props.testID,onLayout:this.props.onLayout,hitSlop:this.props.hitSlop};return _react.default.createElement(_GestureHandler.BaseButton,(0,_extends2.default)({onHandlerStateChange:this.props.disabled?null:this.onHandlerStateChange,onGestureEvent:this.onGestureEvent,hitSlop:this.props.hitSlop},this.props.extraButtonProps),_react.default.createElement(_Animated.default.View,(0,_extends2.default)({},coreProps,{style:this.props.style}),this.props.children));}}]);return GenericTouchable;}(_react.Component);exports.default=GenericTouchable;GenericTouchable.publicPropTypes=PublicPropTypes;GenericTouchable.internalPropTypes=InternalPropTypes;GenericTouchable.propTypes=_objectSpread({},InternalPropTypes,{},PublicPropTypes);GenericTouchable.defaultProps={delayLongPress:600,extraButtonProps:{rippleColor:'transparent'}};","map":{"version":3,"sources":["C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js"],"names":["TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","PublicPropTypes","accessible","PropTypes","bool","accessibilityLabel","node","accessibilityHint","string","hitSlop","shape","top","number","left","bottom","right","disabled","onPress","func","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","InternalPropTypes","extraButtonProps","object","onStateChange","GenericTouchable","longPressDetected","pointerInside","STATE","handlePressIn","props","pressInTimeout","setTimeout","moveToState","time","longPressTimeout","onLongPressDetected","handleMoveOutside","pressOutTimeout","handleGoToUndetermined","clearTimeout","newState","reset","onGestureEvent","nativeEvent","onMoveIn","onMoveOut","onHandlerStateChange","state","State","CANCELLED","FAILED","Platform","OS","ACTIVE","END","shouldCallOnPress","coreProps","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityTraits","style","children","Component","publicPropTypes","internalPropTypes","propTypes","defaultProps","rippleColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/kmagiera/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn = () => {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  };\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside = () => {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  };\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined = () => {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  };\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState = newState => {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  };\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS === 'ios' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn = () => {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttles with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  };\n\n  onMoveOut = () => {\n    // long press shouldn't be longer detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  };\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        onHandlerStateChange={this.props.disabled ? null : this.onHandlerStateChange}\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}