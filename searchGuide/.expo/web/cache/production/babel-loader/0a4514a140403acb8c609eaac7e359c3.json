{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.emitNotification=emitNotification;exports.default=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _expoConstants=_interopRequireDefault(require(\"expo-constants\"));var _fbemitter=require(\"fbemitter\");var _invariant=_interopRequireDefault(require(\"invariant\"));var _AsyncStorage=_interopRequireDefault(require(\"react-native-web/dist/exports/AsyncStorage\"));var _Platform=_interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));var _core=require(\"@unimodules/core\");var _ExponentNotifications=_interopRequireDefault(require(\"./ExponentNotifications\"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var _emitter;var _initialNotification;function _maybeInitEmitter(){if(!_emitter){_emitter=new _fbemitter.EventEmitter();_core.RCTDeviceEventEmitter.addListener('Exponent.notification',emitNotification);}}function emitNotification(notification){if(typeof notification==='string'){notification=JSON.parse(notification);}notification=_objectSpread({},notification);if(typeof notification.data==='string'){try{notification.data=JSON.parse(notification.data);}catch(e){}}_emitter.emit('notification',notification);}function _processNotification(notification){notification=(0,_extends2.default)({},notification);if(!notification.data){notification.data={};}if(notification.hasOwnProperty('count')){delete notification.count;}if(_Platform.default.OS==='ios'){if(notification.android){delete notification.android;}if(notification.ios){notification=(0,_extends2.default)(notification,notification.ios);notification.data._displayInForeground=notification.ios._displayInForeground;delete notification.ios;}}if(_Platform.default.OS==='android'){if(notification.ios){delete notification.ios;}if(notification.android){notification=(0,_extends2.default)(notification,notification.android);delete notification.android;}}return notification;}function _validateNotification(notification){if(_Platform.default.OS==='ios'){(0,_invariant.default)(!!notification.title&&!!notification.body,'Local notifications on iOS require both a title and a body');}else if(_Platform.default.OS==='android'){(0,_invariant.default)(!!notification.title,'Local notifications on Android require a title');}}var ASYNC_STORAGE_PREFIX='__expo_internal_channel_';var IS_USING_NEW_BINARY=typeof _ExponentNotifications.default.createChannel==='function';function _legacyReadChannel(id){var channelString;return _regenerator.default.async(function _legacyReadChannel$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regenerator.default.awrap(_AsyncStorage.default.getItem(\"\"+ASYNC_STORAGE_PREFIX+id));case 3:channelString=_context.sent;if(!channelString){_context.next=6;break;}return _context.abrupt(\"return\",JSON.parse(channelString));case 6:_context.next=10;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);case 10:return _context.abrupt(\"return\",null);case 11:case\"end\":return _context.stop();}}},null,null,[[0,8]]);}function _legacyDeleteChannel(id){return _AsyncStorage.default.removeItem(\"\"+ASYNC_STORAGE_PREFIX+id);}if(_Platform.default.OS==='android'){_AsyncStorage.default.clear=function _callee(callback){var keys,filteredKeys;return _regenerator.default.async(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regenerator.default.awrap(_AsyncStorage.default.getAllKeys());case 3:keys=_context2.sent;if(!(keys&&keys.length)){_context2.next=8;break;}filteredKeys=keys.filter(function(key){return!key.startsWith(ASYNC_STORAGE_PREFIX);});_context2.next=8;return _regenerator.default.awrap(_AsyncStorage.default.multiRemove(filteredKeys));case 8:callback&&callback();_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);callback&&callback(_context2.t0);throw _context2.t0;case 15:case\"end\":return _context2.stop();}}},null,null,[[0,11]]);};}function _legacySaveChannel(id,channel){return _AsyncStorage.default.setItem(\"\"+ASYNC_STORAGE_PREFIX+id,JSON.stringify(channel));}var _default={_setInitialNotification:function _setInitialNotification(notification){_initialNotification=notification;},createCategoryAsync:function createCategoryAsync(categoryId,actions){return _ExponentNotifications.default.createCategoryAsync(categoryId,actions);},deleteCategoryAsync:function deleteCategoryAsync(categoryId){return _ExponentNotifications.default.deleteCategoryAsync(categoryId);},getExpoPushTokenAsync:function getExpoPushTokenAsync(){if(!_ExponentNotifications.default.getExponentPushTokenAsync){throw new _core.UnavailabilityError('Expo.Notifications','getExpoPushTokenAsync');}if(!_expoConstants.default.isDevice){throw new Error(\"Must be on a physical device to get an Expo Push Token\");}return _ExponentNotifications.default.getExponentPushTokenAsync();},getDevicePushTokenAsync:function getDevicePushTokenAsync(config){if(!_ExponentNotifications.default.getDevicePushTokenAsync){throw new _core.UnavailabilityError('Expo.Notifications','getDevicePushTokenAsync');}return _ExponentNotifications.default.getDevicePushTokenAsync(config||{});},createChannelAndroidAsync:function createChannelAndroidAsync(id,channel){if(_Platform.default.OS!=='android'){console.warn(\"createChannelAndroidAsync(...) has no effect on \"+_Platform.default.OS);return Promise.resolve();}if(!IS_USING_NEW_BINARY){return _legacySaveChannel(id,channel);}return _ExponentNotifications.default.createChannel(id,channel);},deleteChannelAndroidAsync:function deleteChannelAndroidAsync(id){if(_Platform.default.OS!=='android'){console.warn(\"deleteChannelAndroidAsync(...) has no effect on \"+_Platform.default.OS);return Promise.resolve();}if(!IS_USING_NEW_BINARY){return Promise.resolve();}return _ExponentNotifications.default.deleteChannel(id);},presentLocalNotificationAsync:function presentLocalNotificationAsync(notification){var nativeNotification,_channel;return _regenerator.default.async(function presentLocalNotificationAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_validateNotification(notification);nativeNotification=_processNotification(notification);if(!(_Platform.default.OS!=='android')){_context3.next=8;break;}_context3.next=5;return _regenerator.default.awrap(_ExponentNotifications.default.presentLocalNotification(nativeNotification));case 5:return _context3.abrupt(\"return\",_context3.sent);case 8:if(!nativeNotification.channelId){_context3.next=12;break;}_context3.next=11;return _regenerator.default.awrap(_legacyReadChannel(nativeNotification.channelId));case 11:_channel=_context3.sent;case 12:if(!IS_USING_NEW_BINARY){_context3.next=17;break;}_legacyDeleteChannel(nativeNotification.channelId);return _context3.abrupt(\"return\",_ExponentNotifications.default.presentLocalNotificationWithChannel(nativeNotification,_channel));case 17:if(_channel){nativeNotification.sound=_channel.sound;nativeNotification.priority=_channel.priority;nativeNotification.vibrate=_channel.vibrate;}return _context3.abrupt(\"return\",_ExponentNotifications.default.presentLocalNotification(nativeNotification));case 19:case\"end\":return _context3.stop();}}});},scheduleLocalNotificationAsync:function scheduleLocalNotificationAsync(notification){var options,now,nativeNotification,timeAsDateObj,validOptions,_channel,_args4=arguments;return _regenerator.default.async(function scheduleLocalNotificationAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:options=_args4.length>1&&_args4[1]!==undefined?_args4[1]:{};now=Date.now();_validateNotification(notification);nativeNotification=_processNotification(notification);if(!options.time){_context4.next=11;break;}timeAsDateObj=null;if(options.time&&typeof options.time==='number'){timeAsDateObj=new Date(options.time);if(timeAsDateObj.toString()==='Invalid Date'){timeAsDateObj=null;}}else if(options.time&&options.time instanceof Date){timeAsDateObj=options.time;}if(timeAsDateObj){_context4.next=9;break;}throw new Error(\"Provided value for \\\"time\\\" is invalid. Please verify that it's either a number representing Unix Epoch time in milliseconds, or a valid date object.\");case 9:if(timeAsDateObj.getTime()<now){console.warn(\"Provided value for \\\"time\\\" is before the current date. Did you possibly pass number of seconds since Unix Epoch instead of number of milliseconds?\");}options=_objectSpread({},options,{time:timeAsDateObj.getTime()});case 11:if(!(options.intervalMs!=null&&options.repeat!=null)){_context4.next=13;break;}throw new Error(\"Pass either the \\\"repeat\\\" option or \\\"intervalMs\\\" option, not both\");case 13:if(!(options.repeat!=null)){_context4.next=17;break;}validOptions=new Set(['minute','hour','day','week','month','year']);if(validOptions.has(options.repeat)){_context4.next=17;break;}throw new Error(\"Pass one of ['minute', 'hour', 'day', 'week', 'month', 'year'] as the value for the \\\"repeat\\\" option\");case 17:if(!(options.intervalMs!=null)){_context4.next=22;break;}if(!(_Platform.default.OS==='ios')){_context4.next=20;break;}throw new Error(\"The \\\"intervalMs\\\" option is not supported on iOS\");case 20:if(!(options.intervalMs<=0||!Number.isInteger(options.intervalMs))){_context4.next=22;break;}throw new Error(\"Pass an integer greater than zero as the value for the \\\"intervalMs\\\" option\");case 22:if(!(_Platform.default.OS!=='android')){_context4.next=29;break;}if(!options.repeat){_context4.next=26;break;}console.warn('Ability to schedule an automatically repeated notification is deprecated on iOS and will be removed in the next SDK release.');return _context4.abrupt(\"return\",_ExponentNotifications.default.legacyScheduleLocalRepeatingNotification(nativeNotification,options));case 26:return _context4.abrupt(\"return\",_ExponentNotifications.default.scheduleLocalNotification(nativeNotification,options));case 29:if(!nativeNotification.channelId){_context4.next=33;break;}_context4.next=32;return _regenerator.default.awrap(_legacyReadChannel(nativeNotification.channelId));case 32:_channel=_context4.sent;case 33:if(!IS_USING_NEW_BINARY){_context4.next=38;break;}_legacyDeleteChannel(nativeNotification.channelId);return _context4.abrupt(\"return\",_ExponentNotifications.default.scheduleLocalNotificationWithChannel(nativeNotification,options,_channel));case 38:if(_channel){nativeNotification.sound=_channel.sound;nativeNotification.priority=_channel.priority;nativeNotification.vibrate=_channel.vibrate;}return _context4.abrupt(\"return\",_ExponentNotifications.default.scheduleLocalNotification(nativeNotification,options));case 40:case\"end\":return _context4.stop();}}});},dismissNotificationAsync:function dismissNotificationAsync(notificationId){return _regenerator.default.async(function dismissNotificationAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(_ExponentNotifications.default.dismissNotification){_context5.next=2;break;}throw new _core.UnavailabilityError('Expo.Notifications','dismissNotification');case 2:_context5.next=4;return _regenerator.default.awrap(_ExponentNotifications.default.dismissNotification(notificationId));case 4:return _context5.abrupt(\"return\",_context5.sent);case 5:case\"end\":return _context5.stop();}}});},dismissAllNotificationsAsync:function dismissAllNotificationsAsync(){return _regenerator.default.async(function dismissAllNotificationsAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(_ExponentNotifications.default.dismissAllNotifications){_context6.next=2;break;}throw new _core.UnavailabilityError('Expo.Notifications','dismissAllNotifications');case 2:_context6.next=4;return _regenerator.default.awrap(_ExponentNotifications.default.dismissAllNotifications());case 4:return _context6.abrupt(\"return\",_context6.sent);case 5:case\"end\":return _context6.stop();}}});},cancelScheduledNotificationAsync:function cancelScheduledNotificationAsync(notificationId){if(_Platform.default.OS==='android'&&typeof notificationId==='string'){return _ExponentNotifications.default.cancelScheduledNotificationWithStringIdAsync(notificationId);}return _ExponentNotifications.default.cancelScheduledNotificationAsync(notificationId);},cancelAllScheduledNotificationsAsync:function cancelAllScheduledNotificationsAsync(){return _ExponentNotifications.default.cancelAllScheduledNotificationsAsync();},addListener:function addListener(listener){_maybeInitEmitter();if(_initialNotification){var initialNotification=_initialNotification;_initialNotification=null;setTimeout(function(){emitNotification(initialNotification);},0);}return _emitter.addListener('notification',listener);},getBadgeNumberAsync:function getBadgeNumberAsync(){return _regenerator.default.async(function getBadgeNumberAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(_ExponentNotifications.default.getBadgeNumberAsync){_context7.next=2;break;}return _context7.abrupt(\"return\",0);case 2:return _context7.abrupt(\"return\",_ExponentNotifications.default.getBadgeNumberAsync());case 3:case\"end\":return _context7.stop();}}});},setBadgeNumberAsync:function setBadgeNumberAsync(number){return _regenerator.default.async(function setBadgeNumberAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(_ExponentNotifications.default.setBadgeNumberAsync){_context8.next=2;break;}throw new _core.UnavailabilityError('Expo.Notifications','setBadgeNumberAsync');case 2:return _context8.abrupt(\"return\",_ExponentNotifications.default.setBadgeNumberAsync(number));case 3:case\"end\":return _context8.stop();}}});},scheduleNotificationWithCalendarAsync:function scheduleNotificationWithCalendarAsync(notification){var options,areOptionsValid,_args9=arguments;return _regenerator.default.async(function scheduleNotificationWithCalendarAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:options=_args9.length>1&&_args9[1]!==undefined?_args9[1]:{};areOptionsValid=(options.month==null||isInRangeInclusive(options.month,1,12))&&(options.day==null||isInRangeInclusive(options.day,1,31))&&(options.hour==null||isInRangeInclusive(options.hour,0,23))&&(options.minute==null||isInRangeInclusive(options.minute,0,59))&&(options.second==null||isInRangeInclusive(options.second,0,59))&&(options.weekDay==null||isInRangeInclusive(options.weekDay,1,7))&&(options.weekDay==null||options.day==null);if(areOptionsValid){_context9.next=4;break;}throw new _core.CodedError('WRONG_OPTIONS','Options in scheduleNotificationWithCalendarAsync call were incorrect!');case 4:return _context9.abrupt(\"return\",_ExponentNotifications.default.scheduleNotificationWithCalendar(notification,options));case 5:case\"end\":return _context9.stop();}}});},scheduleNotificationWithTimerAsync:function scheduleNotificationWithTimerAsync(notification,options){return _regenerator.default.async(function scheduleNotificationWithTimerAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:if(!(options.interval<1)){_context10.next=2;break;}throw new _core.CodedError('WRONG_OPTIONS','Interval must be not less then 1');case 2:return _context10.abrupt(\"return\",_ExponentNotifications.default.scheduleNotificationWithTimer(notification,options));case 3:case\"end\":return _context10.stop();}}});}};exports.default=_default;function isInRangeInclusive(variable,min,max){return variable>=min&&variable<=max;}","map":{"version":3,"sources":["../../src/Notifications/Notifications.ts"],"names":[],"mappings":"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","sourcesContent":["import Constants from 'expo-constants';\nimport { EventEmitter, EventSubscription } from 'fbemitter';\nimport invariant from 'invariant';\nimport { AsyncStorage, Platform } from 'react-native';\nimport { CodedError, RCTDeviceEventEmitter, UnavailabilityError } from '@unimodules/core';\nimport ExponentNotifications from './ExponentNotifications';\nimport {\n  Notification,\n  LocalNotification,\n  Channel,\n  ActionType,\n  LocalNotificationId,\n} from './Notifications.types';\nlet _emitter;\nlet _initialNotification;\n\nfunction _maybeInitEmitter() {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    RCTDeviceEventEmitter.addListener('Exponent.notification', emitNotification);\n  }\n}\n\nexport function emitNotification(notification) {\n  if (typeof notification === 'string') {\n    notification = JSON.parse(notification);\n  }\n\n  /* Don't mutate the original notification */\n  notification = { ...notification };\n\n  if (typeof notification.data === 'string') {\n    try {\n      notification.data = JSON.parse(notification.data);\n    } catch (e) {\n      // It's actually just a string, that's fine\n    }\n  }\n\n  _emitter.emit('notification', notification);\n}\n\nfunction _processNotification(notification) {\n  notification = Object.assign({}, notification);\n\n  if (!notification.data) {\n    notification.data = {};\n  }\n\n  if (notification.hasOwnProperty('count')) {\n    delete notification.count;\n  }\n\n  // Delete any Android properties on iOS and merge the iOS properties on root notification object\n  if (Platform.OS === 'ios') {\n    if (notification.android) {\n      delete notification.android;\n    }\n\n    if (notification.ios) {\n      notification = Object.assign(notification, notification.ios);\n      notification.data._displayInForeground = notification.ios._displayInForeground;\n      delete notification.ios;\n    }\n  }\n\n  // Delete any iOS properties on Android and merge the Android properties on root notification\n  // object\n  if (Platform.OS === 'android') {\n    if (notification.ios) {\n      delete notification.ios;\n    }\n\n    if (notification.android) {\n      notification = Object.assign(notification, notification.android);\n      delete notification.android;\n    }\n  }\n\n  return notification;\n}\n\nfunction _validateNotification(notification) {\n  if (Platform.OS === 'ios') {\n    invariant(\n      !!notification.title && !!notification.body,\n      'Local notifications on iOS require both a title and a body'\n    );\n  } else if (Platform.OS === 'android') {\n    invariant(!!notification.title, 'Local notifications on Android require a title');\n  }\n}\n\nlet ASYNC_STORAGE_PREFIX = '__expo_internal_channel_';\n// TODO: remove this before releasing\n// this will always be `true` for SDK 28+\nlet IS_USING_NEW_BINARY = typeof ExponentNotifications.createChannel === 'function';\n\nasync function _legacyReadChannel(id: string): Promise<Channel | null> {\n  try {\n    let channelString = await AsyncStorage.getItem(`${ASYNC_STORAGE_PREFIX}${id}`);\n    if (channelString) {\n      return JSON.parse(channelString);\n    }\n  } catch (e) {}\n  return null;\n}\n\nfunction _legacyDeleteChannel(id: string): Promise<void> {\n  return AsyncStorage.removeItem(`${ASYNC_STORAGE_PREFIX}${id}`);\n}\n\nif (Platform.OS === 'android') {\n  AsyncStorage.clear = async function(callback?: (error?: Error) => void): Promise<void> {\n    try {\n      let keys = await AsyncStorage.getAllKeys();\n      if (keys && keys.length) {\n        let filteredKeys = keys.filter(key => !key.startsWith(ASYNC_STORAGE_PREFIX));\n        await AsyncStorage.multiRemove(filteredKeys);\n      }\n      callback && callback();\n    } catch (e) {\n      callback && callback(e);\n      throw e;\n    }\n  };\n}\n\n// This codepath will never be triggered in SDK 28 and above\n// TODO: remove before releasing\nfunction _legacySaveChannel(id: string, channel: Channel): Promise<void> {\n  return AsyncStorage.setItem(`${ASYNC_STORAGE_PREFIX}${id}`, JSON.stringify(channel));\n}\n\nexport default {\n  /* Only used internally to initialize the notification from top level props */\n  _setInitialNotification(notification: Notification) {\n    _initialNotification = notification;\n  },\n\n  // User passes set of actions titles.\n  createCategoryAsync(categoryId: string, actions: ActionType[]): Promise<void> {\n    return ExponentNotifications.createCategoryAsync(categoryId, actions);\n  },\n\n  deleteCategoryAsync(categoryId: string): Promise<void> {\n    return ExponentNotifications.deleteCategoryAsync(categoryId);\n  },\n\n  /* Re-export */\n  getExpoPushTokenAsync(): Promise<string> {\n    if (!ExponentNotifications.getExponentPushTokenAsync) {\n      throw new UnavailabilityError('Expo.Notifications', 'getExpoPushTokenAsync');\n    }\n    if (!Constants.isDevice) {\n      throw new Error(`Must be on a physical device to get an Expo Push Token`);\n    }\n    return ExponentNotifications.getExponentPushTokenAsync();\n  },\n\n  getDevicePushTokenAsync: (config: {\n    gcmSenderId?: string;\n  }): Promise<{ type: string; data: string }> => {\n    if (!ExponentNotifications.getDevicePushTokenAsync) {\n      throw new UnavailabilityError('Expo.Notifications', 'getDevicePushTokenAsync');\n    }\n    return ExponentNotifications.getDevicePushTokenAsync(config || {});\n  },\n\n  createChannelAndroidAsync(id: string, channel: Channel): Promise<void> {\n    if (Platform.OS !== 'android') {\n      console.warn(`createChannelAndroidAsync(...) has no effect on ${Platform.OS}`);\n      return Promise.resolve();\n    }\n    // This codepath will never be triggered in SDK 28 and above\n    // TODO: remove before releasing\n    if (!IS_USING_NEW_BINARY) {\n      return _legacySaveChannel(id, channel);\n    }\n    return ExponentNotifications.createChannel(id, channel);\n  },\n\n  deleteChannelAndroidAsync(id: string): Promise<void> {\n    if (Platform.OS !== 'android') {\n      console.warn(`deleteChannelAndroidAsync(...) has no effect on ${Platform.OS}`);\n      return Promise.resolve();\n    }\n    // This codepath will never be triggered in SDK 28 and above\n    // TODO: remove before releasing\n    if (!IS_USING_NEW_BINARY) {\n      return Promise.resolve();\n    }\n    return ExponentNotifications.deleteChannel(id);\n  },\n\n  /* Shows a notification instantly */\n  async presentLocalNotificationAsync(\n    notification: LocalNotification\n  ): Promise<LocalNotificationId> {\n    _validateNotification(notification);\n    let nativeNotification = _processNotification(notification);\n\n    if (Platform.OS !== 'android') {\n      return await ExponentNotifications.presentLocalNotification(nativeNotification);\n    } else {\n      let _channel;\n      if (nativeNotification.channelId) {\n        _channel = await _legacyReadChannel(nativeNotification.channelId);\n      }\n\n      if (IS_USING_NEW_BINARY) {\n        // delete the legacy channel from AsyncStorage so this codepath isn't triggered anymore\n        _legacyDeleteChannel(nativeNotification.channelId);\n        return ExponentNotifications.presentLocalNotificationWithChannel(\n          nativeNotification,\n          _channel\n        );\n      } else {\n        // TODO: remove this codepath before releasing, it will never be triggered on SDK 28+\n        // channel does not actually exist, so add its settings to the individual notification\n        if (_channel) {\n          nativeNotification.sound = _channel.sound;\n          nativeNotification.priority = _channel.priority;\n          nativeNotification.vibrate = _channel.vibrate;\n        }\n        return ExponentNotifications.presentLocalNotification(nativeNotification);\n      }\n    }\n  },\n\n  /* Schedule a notification at a later date */\n  async scheduleLocalNotificationAsync(\n    notification: LocalNotification,\n    options: {\n      time?: Date | number;\n      repeat?: 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n      intervalMs?: number;\n    } = {}\n  ): Promise<LocalNotificationId> {\n    // set now at the beginning of the method, to prevent potential weird warnings when we validate\n    // options.time later on\n    const now = Date.now();\n\n    // Validate and process the notification data\n    _validateNotification(notification);\n    let nativeNotification = _processNotification(notification);\n\n    // Validate `options.time`\n    if (options.time) {\n      let timeAsDateObj: Date | null = null;\n      if (options.time && typeof options.time === 'number') {\n        timeAsDateObj = new Date(options.time);\n        if (timeAsDateObj.toString() === 'Invalid Date') {\n          timeAsDateObj = null;\n        }\n      } else if (options.time && options.time instanceof Date) {\n        timeAsDateObj = options.time;\n      }\n\n      // If we couldn't convert properly, throw an error\n      if (!timeAsDateObj) {\n        throw new Error(\n          `Provided value for \"time\" is invalid. Please verify that it's either a number representing Unix Epoch time in milliseconds, or a valid date object.`\n        );\n      }\n\n      // If someone passes in a value that is too small, say, by an order of 1000 (it's common to\n      // accidently pass seconds instead of ms), display a warning.\n      if (timeAsDateObj.getTime() < now) {\n        console.warn(\n          `Provided value for \"time\" is before the current date. Did you possibly pass number of seconds since Unix Epoch instead of number of milliseconds?`\n        );\n      }\n\n      options = {\n        ...options,\n        time: timeAsDateObj.getTime(),\n      };\n    }\n\n    if (options.intervalMs != null && options.repeat != null) {\n      throw new Error(`Pass either the \"repeat\" option or \"intervalMs\" option, not both`);\n    }\n\n    // Validate options.repeat\n    if (options.repeat != null) {\n      const validOptions = new Set(['minute', 'hour', 'day', 'week', 'month', 'year']);\n      if (!validOptions.has(options.repeat)) {\n        throw new Error(\n          `Pass one of ['minute', 'hour', 'day', 'week', 'month', 'year'] as the value for the \"repeat\" option`\n        );\n      }\n    }\n\n    if (options.intervalMs != null) {\n      if (Platform.OS === 'ios') {\n        throw new Error(`The \"intervalMs\" option is not supported on iOS`);\n      }\n\n      if (options.intervalMs <= 0 || !Number.isInteger(options.intervalMs)) {\n        throw new Error(\n          `Pass an integer greater than zero as the value for the \"intervalMs\" option`\n        );\n      }\n    }\n\n    if (Platform.OS !== 'android') {\n      if (options.repeat) {\n        console.warn(\n          'Ability to schedule an automatically repeated notification is deprecated on iOS and will be removed in the next SDK release.'\n        );\n        return ExponentNotifications.legacyScheduleLocalRepeatingNotification(\n          nativeNotification,\n          options\n        );\n      }\n\n      return ExponentNotifications.scheduleLocalNotification(nativeNotification, options);\n    } else {\n      let _channel;\n      if (nativeNotification.channelId) {\n        _channel = await _legacyReadChannel(nativeNotification.channelId);\n      }\n\n      if (IS_USING_NEW_BINARY) {\n        // delete the legacy channel from AsyncStorage so this codepath isn't triggered anymore\n        _legacyDeleteChannel(nativeNotification.channelId);\n        return ExponentNotifications.scheduleLocalNotificationWithChannel(\n          nativeNotification,\n          options,\n          _channel\n        );\n      } else {\n        // TODO: remove this codepath before releasing, it will never be triggered on SDK 28+\n        // channel does not actually exist, so add its settings to the individual notification\n        if (_channel) {\n          nativeNotification.sound = _channel.sound;\n          nativeNotification.priority = _channel.priority;\n          nativeNotification.vibrate = _channel.vibrate;\n        }\n        return ExponentNotifications.scheduleLocalNotification(nativeNotification, options);\n      }\n    }\n  },\n\n  /* Dismiss currently shown notification with ID (Android only) */\n  async dismissNotificationAsync(notificationId: LocalNotificationId): Promise<void> {\n    if (!ExponentNotifications.dismissNotification) {\n      throw new UnavailabilityError('Expo.Notifications', 'dismissNotification');\n    }\n    return await ExponentNotifications.dismissNotification(notificationId);\n  },\n\n  /* Dismiss all currently shown notifications (Android only) */\n  async dismissAllNotificationsAsync(): Promise<void> {\n    if (!ExponentNotifications.dismissAllNotifications) {\n      throw new UnavailabilityError('Expo.Notifications', 'dismissAllNotifications');\n    }\n    return await ExponentNotifications.dismissAllNotifications();\n  },\n\n  /* Cancel scheduled notification notification with ID */\n  cancelScheduledNotificationAsync(notificationId: LocalNotificationId): Promise<void> {\n    if (Platform.OS === 'android' && typeof notificationId === 'string') {\n      return ExponentNotifications.cancelScheduledNotificationWithStringIdAsync(notificationId);\n    }\n    return ExponentNotifications.cancelScheduledNotificationAsync(notificationId);\n  },\n\n  /* Cancel all scheduled notifications */\n  cancelAllScheduledNotificationsAsync(): Promise<void> {\n    return ExponentNotifications.cancelAllScheduledNotificationsAsync();\n  },\n\n  /* Primary public api */\n  addListener(listener: (notification: Notification) => unknown): EventSubscription {\n    _maybeInitEmitter();\n\n    if (_initialNotification) {\n      const initialNotification = _initialNotification;\n      _initialNotification = null;\n      setTimeout(() => {\n        emitNotification(initialNotification);\n      }, 0);\n    }\n\n    return _emitter.addListener('notification', listener);\n  },\n\n  async getBadgeNumberAsync(): Promise<number> {\n    if (!ExponentNotifications.getBadgeNumberAsync) {\n      return 0;\n    }\n    return ExponentNotifications.getBadgeNumberAsync();\n  },\n\n  async setBadgeNumberAsync(number: number): Promise<void> {\n    if (!ExponentNotifications.setBadgeNumberAsync) {\n      throw new UnavailabilityError('Expo.Notifications', 'setBadgeNumberAsync');\n    }\n    return ExponentNotifications.setBadgeNumberAsync(number);\n  },\n\n  async scheduleNotificationWithCalendarAsync(\n    notification: LocalNotification,\n    options: {\n      year?: number;\n      month?: number;\n      hour?: number;\n      day?: number;\n      minute?: number;\n      second?: number;\n      weekDay?: number;\n      repeat?: boolean;\n    } = {}\n  ): Promise<string> {\n    const areOptionsValid: boolean =\n      (options.month == null || isInRangeInclusive(options.month, 1, 12)) &&\n      (options.day == null || isInRangeInclusive(options.day, 1, 31)) &&\n      (options.hour == null || isInRangeInclusive(options.hour, 0, 23)) &&\n      (options.minute == null || isInRangeInclusive(options.minute, 0, 59)) &&\n      (options.second == null || isInRangeInclusive(options.second, 0, 59)) &&\n      (options.weekDay == null || isInRangeInclusive(options.weekDay, 1, 7)) &&\n      (options.weekDay == null || options.day == null);\n\n    if (!areOptionsValid) {\n      throw new CodedError(\n        'WRONG_OPTIONS',\n        'Options in scheduleNotificationWithCalendarAsync call were incorrect!'\n      );\n    }\n\n    return ExponentNotifications.scheduleNotificationWithCalendar(notification, options);\n  },\n\n  async scheduleNotificationWithTimerAsync(\n    notification: LocalNotification,\n    options: {\n      interval: number;\n      repeat?: boolean;\n    }\n  ): Promise<string> {\n    if (options.interval < 1) {\n      throw new CodedError('WRONG_OPTIONS', 'Interval must be not less then 1');\n    }\n    return ExponentNotifications.scheduleNotificationWithTimer(notification, options);\n  },\n};\n\nfunction isInRangeInclusive(variable: number, min: number, max: number): boolean {\n  return variable >= min && variable <= max;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}