{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"AppOwnership\",{enumerable:true,get:function get(){return _Constants.AppOwnership;}});Object.defineProperty(exports,\"UserInterfaceIdiom\",{enumerable:true,get:function get(){return _Constants.UserInterfaceIdiom;}});exports.default=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _Constants=require(\"./Constants.types\");var _ExponentConstants=_interopRequireDefault(require(\"./ExponentConstants\"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}if(!_ExponentConstants.default){console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");}var manifest=null;if(_ExponentConstants.default&&_ExponentConstants.default.manifest){manifest=_ExponentConstants.default.manifest;if(typeof manifest==='string'){manifest=JSON.parse(manifest);}}var _ref=_ExponentConstants.default||{},name=_ref.name,constants=(0,_objectWithoutProperties2.default)(_ref,[\"name\"]);var _default=_objectSpread({},constants,{manifest:manifest,deviceId:constants.installationId,linkingUrl:constants.linkingUri});exports.default=_default;","map":{"version":3,"sources":["../src/Constants.ts"],"names":[],"mappings":"qmBAAA,4CASA,8E,yxBAYA,GAAI,CAAC,0BAAL,CAAwB,CACtB,OAAO,CAAC,IAAR,CACE,wGADF,EAGD,CAGD,GAAI,CAAA,QAAQ,CAAG,IAAf,CACA,GAAI,4BAAqB,2BAAkB,QAA3C,CAAqD,CACnD,QAAQ,CAAG,2BAAkB,QAA7B,CACA,GAAI,MAAO,CAAA,QAAP,GAAoB,QAAxB,CAAkC,CAChC,QAAQ,CAAG,IAAI,CAAC,KAAL,CAAW,QAAX,CAAX,CACD,CACF,C,SAE+B,4BAAqB,E,CAA7C,I,MAAA,I,CAAS,S,oFAQZ,S,EACH,QAAQ,CAAR,Q,CAEA,QAAQ,CAAE,SAAS,CAAC,c,CACpB,UAAU,CAAE,SAAS,CAAC,U","sourcesContent":["import {\n  AndroidManifest,\n  AppOwnership,\n  IOSManifest,\n  PlatformManifest,\n  NativeConstants,\n  UserInterfaceIdiom,\n  WebManifest,\n} from './Constants.types';\nimport ExponentConstants from './ExponentConstants';\n\nexport {\n  AppOwnership,\n  UserInterfaceIdiom,\n  PlatformManifest,\n  NativeConstants,\n  IOSManifest,\n  AndroidManifest,\n  WebManifest,\n};\n\nif (!ExponentConstants) {\n  console.warn(\n    \"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\"\n  );\n}\n\n// On Android we pass the manifest in JSON form so this step is necessary\nlet manifest = null;\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nconst { name, ...constants } = (ExponentConstants || {}) as any;\n\nexport interface Constants extends NativeConstants {\n  deviceId?: string;\n  linkingUrl?: string;\n}\n\nexport default {\n  ...constants,\n  manifest,\n  // Legacy aliases\n  deviceId: constants.installationId,\n  linkingUrl: constants.linkingUri,\n} as Constants;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}