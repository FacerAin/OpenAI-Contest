{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _propTypes=_interopRequireDefault(require(\"prop-types\"));var GestureHandlerPropTypes={id:_propTypes.default.string,minPointers:_propTypes.default.number,enabled:_propTypes.default.bool,waitFor:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object,_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]))]),simultaneousHandlers:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object,_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]))]),shouldCancelWhenOutside:_propTypes.default.bool,hitSlop:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.shape({left:_propTypes.default.number,top:_propTypes.default.number,right:_propTypes.default.number,bottom:_propTypes.default.number,vertical:_propTypes.default.number,horizontal:_propTypes.default.number,width:_propTypes.default.number,height:_propTypes.default.number})]),onGestureEvent:_propTypes.default.oneOfType([_propTypes.default.func,_propTypes.default.object]),onHandlerStateChange:_propTypes.default.oneOfType([_propTypes.default.func,_propTypes.default.object]),onBegan:_propTypes.default.func,onFailed:_propTypes.default.func,onCancelled:_propTypes.default.func,onActivated:_propTypes.default.func,onEnded:_propTypes.default.func};var _default=GestureHandlerPropTypes;exports.default=_default;","map":{"version":3,"sources":["C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/node_modules/react-native-gesture-handler/GestureHandlerPropTypes.js"],"names":["GestureHandlerPropTypes","id","PropTypes","string","minPointers","number","enabled","bool","waitFor","oneOfType","object","arrayOf","simultaneousHandlers","shouldCancelWhenOutside","hitSlop","shape","left","top","right","bottom","vertical","horizontal","width","height","onGestureEvent","func","onHandlerStateChange","onBegan","onFailed","onCancelled","onActivated","onEnded"],"mappings":"mKAAA,6DAGA,GAAMA,CAAAA,uBAAuB,CAAG,CAC9BC,EAAE,CAAEC,mBAAUC,MADgB,CAE9BC,WAAW,CAAEF,mBAAUG,MAFO,CAG9BC,OAAO,CAAEJ,mBAAUK,IAHW,CAI9BC,OAAO,CAAEN,mBAAUO,SAAV,CAAoB,CAC3BP,mBAAUC,MADiB,CAE3BD,mBAAUQ,MAFiB,CAG3BR,mBAAUS,OAAV,CACET,mBAAUO,SAAV,CAAoB,CAACP,mBAAUC,MAAX,CAAmBD,mBAAUQ,MAA7B,CAApB,CADF,CAH2B,CAApB,CAJqB,CAW9BE,oBAAoB,CAAEV,mBAAUO,SAAV,CAAoB,CACxCP,mBAAUC,MAD8B,CAExCD,mBAAUQ,MAF8B,CAGxCR,mBAAUS,OAAV,CACET,mBAAUO,SAAV,CAAoB,CAACP,mBAAUC,MAAX,CAAmBD,mBAAUQ,MAA7B,CAApB,CADF,CAHwC,CAApB,CAXQ,CAkB9BG,uBAAuB,CAAEX,mBAAUK,IAlBL,CAmB9BO,OAAO,CAAEZ,mBAAUO,SAAV,CAAoB,CAC3BP,mBAAUG,MADiB,CAE3BH,mBAAUa,KAAV,CAAgB,CACdC,IAAI,CAAEd,mBAAUG,MADF,CAEdY,GAAG,CAAEf,mBAAUG,MAFD,CAGda,KAAK,CAAEhB,mBAAUG,MAHH,CAIdc,MAAM,CAAEjB,mBAAUG,MAJJ,CAKde,QAAQ,CAAElB,mBAAUG,MALN,CAMdgB,UAAU,CAAEnB,mBAAUG,MANR,CAOdiB,KAAK,CAAEpB,mBAAUG,MAPH,CAQdkB,MAAM,CAAErB,mBAAUG,MARJ,CAAhB,CAF2B,CAApB,CAnBqB,CAgC9BmB,cAAc,CAAEtB,mBAAUO,SAAV,CAAoB,CAACP,mBAAUuB,IAAX,CAAiBvB,mBAAUQ,MAA3B,CAApB,CAhCc,CAiC9BgB,oBAAoB,CAAExB,mBAAUO,SAAV,CAAoB,CAACP,mBAAUuB,IAAX,CAAiBvB,mBAAUQ,MAA3B,CAApB,CAjCQ,CAkC9BiB,OAAO,CAAEzB,mBAAUuB,IAlCW,CAmC9BG,QAAQ,CAAE1B,mBAAUuB,IAnCU,CAoC9BI,WAAW,CAAE3B,mBAAUuB,IApCO,CAqC9BK,WAAW,CAAE5B,mBAAUuB,IArCO,CAsC9BM,OAAO,CAAE7B,mBAAUuB,IAtCW,CAAhC,C,aAyCezB,uB","sourcesContent":["import PropTypes from 'prop-types';\n\n// If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nexport default GestureHandlerPropTypes;\n"]},"metadata":{},"sourceType":"script"}