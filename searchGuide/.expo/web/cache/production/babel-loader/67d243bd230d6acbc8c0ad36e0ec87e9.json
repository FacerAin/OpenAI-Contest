{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=withDimensions;exports.isOrientationLandscape=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var React=_interopRequireWildcard(require(\"react\"));var _Dimensions=_interopRequireDefault(require(\"react-native-web/dist/exports/Dimensions\"));var _hoistNonReactStatics=_interopRequireDefault(require(\"hoist-non-react-statics\"));var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-tabs/src/utils/withDimensions.tsx\";var isOrientationLandscape=function isOrientationLandscape(_ref){var width=_ref.width,height=_ref.height;return width>height;};exports.isOrientationLandscape=isOrientationLandscape;function withDimensions(WrappedComponent){var _Dimensions$get=_Dimensions.default.get('window'),width=_Dimensions$get.width,height=_Dimensions$get.height;var EnhancedComponent=function(_React$Component){(0,_inherits2.default)(EnhancedComponent,_React$Component);function EnhancedComponent(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,EnhancedComponent);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(EnhancedComponent)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={dimensions:{width:width,height:height},isLandscape:isOrientationLandscape({width:width,height:height})};_this.handleOrientationChange=function(_ref2){var window=_ref2.window;var isLandscape=isOrientationLandscape(window);_this.setState({isLandscape:isLandscape});};return _this;}(0,_createClass2.default)(EnhancedComponent,[{key:\"componentDidMount\",value:function componentDidMount(){_Dimensions.default.addEventListener('change',this.handleOrientationChange);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){_Dimensions.default.removeEventListener('change',this.handleOrientationChange);}},{key:\"render\",value:function render(){return React.createElement(WrappedComponent,(0,_extends2.default)({},this.props,this.state,{__source:{fileName:_jsxFileName,lineNumber:46}}));}}]);return EnhancedComponent;}(React.Component);EnhancedComponent.displayName=\"withDimensions(\"+WrappedComponent.displayName+\")\";return(0,_hoistNonReactStatics.default)(EnhancedComponent,WrappedComponent);}","map":{"version":3,"sources":["withDimensions.tsx"],"names":["isOrientationLandscape","width","height","Dimensions","EnhancedComponent","React","WrappedComponent","dimensions","isLandscape","window","hoistNonReactStatic"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\ntype DimensionsType = {\n  width: number;\n  height: number;\n};\n\ntype InjectedProps = {\n  dimensions: DimensionsType;\n  isLandscape: boolean;\n};\n\nexport const isOrientationLandscape = ({ width, height }: DimensionsType) =>\n  width > height;\n\nexport default function withDimensions<Props extends InjectedProps>(\n  WrappedComponent: React.ComponentType<Props>\n): React.ComponentType<Pick<Props, Exclude<keyof Props, keyof InjectedProps>>> {\n  const { width, height } = Dimensions.get('window');\n\n  class EnhancedComponent extends React.Component {\n    static displayName = `withDimensions(${WrappedComponent.displayName})`;\n\n    state = {\n      dimensions: { width, height },\n      isLandscape: isOrientationLandscape({ width, height }),\n    };\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      // @ts-ignore\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  // @ts-ignore\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"script"}