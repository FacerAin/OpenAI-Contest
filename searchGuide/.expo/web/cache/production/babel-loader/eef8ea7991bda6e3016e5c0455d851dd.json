{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=getNavigation;var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _getNavigationActionCreators=_interopRequireDefault(require(\"./routers/getNavigationActionCreators\"));var _getChildNavigation2=_interopRequireDefault(require(\"./getChildNavigation\"));var _getChildrenNavigationCache=_interopRequireDefault(require(\"./getChildrenNavigationCache\"));function getNavigation(router,state,dispatch,actionSubscribers,getScreenProps,getCurrentNavigation){var actions=router.getActionCreators(state,null);var navigation={actions:actions,router:router,state:state,dispatch:dispatch,getScreenProps:getScreenProps,getChildNavigation:function getChildNavigation(childKey){return(0,_getChildNavigation2.default)(navigation,childKey,getCurrentNavigation);},isFocused:function isFocused(childKey){var _getCurrentNavigation=getCurrentNavigation().state,routes=_getCurrentNavigation.routes,index=_getCurrentNavigation.index;if(childKey==null||routes[index].key===childKey){return true;}return false;},addListener:function addListener(eventName,handler){if(eventName!=='action'){return{remove:function remove(){}};}actionSubscribers.add(handler);return{remove:function remove(){actionSubscribers.delete(handler);}};},dangerouslyGetParent:function dangerouslyGetParent(){return null;},isFirstRouteInParent:function isFirstRouteInParent(){return true;},_childrenNavigation:(0,_getChildrenNavigationCache.default)(getCurrentNavigation())};var actionCreators=(0,_objectSpread2.default)({},(0,_getNavigationActionCreators.default)(navigation.state),actions);Object.keys(actionCreators).forEach(function(actionName){navigation[actionName]=function(){return navigation.dispatch(actionCreators[actionName].apply(actionCreators,arguments));};});return navigation;}","map":{"version":3,"sources":["getNavigation.js"],"names":["actions","router","navigation","state","dispatch","getScreenProps","getChildNavigation","isFocused","routes","index","getCurrentNavigation","childKey","addListener","eventName","remove","actionSubscribers","dangerouslyGetParent","isFirstRouteInParent","_childrenNavigation","getChildrenNavigationCache","actionCreators","getNavigationActionCreators","Object"],"mappings":"oQAAA,0GACA,iFACA,gGAEe,QAAA,CAAA,aAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,cAAA,CAAA,oBAAA,CAOb,CACA,GAAMA,CAAAA,OAAO,CAAGC,MAAM,CAANA,iBAAAA,CAAAA,KAAAA,CAAhB,IAAgBA,CAAhB,CAEA,GAAMC,CAAAA,UAAU,CAAG,CACjBF,OAAO,CADU,OAAA,CAEjBC,MAAM,CAFW,MAAA,CAGjBE,KAAK,CAHY,KAAA,CAIjBC,QAAQ,CAJS,QAAA,CAKjBC,cAAc,CALG,cAAA,CAMjBC,kBAAkB,CAAE,QAAA,CAAA,kBAAA,CAAA,QAAA,CAAQ,CAAA,MAC1BA,iCAAkB,UAAlBA,CAAkB,QAAlBA,CAD0B,oBAC1BA,CAD0B,CANX,CAAA,CAQjBC,SAAS,CAAE,QAAA,CAAA,SAAA,CAAA,QAAA,CAAY,CAAA,GAAA,CAAA,qBAAA,CACKG,oBAAoB,GADzB,KAAA,CACbF,MADa,CAAA,qBAAA,CAAA,MAAA,CACLC,KADK,CAAA,qBAAA,CAAA,KAAA,CAErB,GAAIE,QAAQ,EAARA,IAAAA,EAAoBH,MAAM,CAANA,KAAM,CAANA,CAAAA,GAAAA,GAAxB,QAAA,CAAwD,CACtD,MAAA,KAAA,CAEF,OAAA,MAAA,CAbe,CAAA,CAejBI,WAAW,CAAE,QAAA,CAAA,WAAA,CAAA,SAAA,CAAA,OAAA,CAAwB,CACnC,GAAIC,SAAS,GAAb,QAAA,CAA4B,CAC1B,MAAO,CAAEC,MAAM,CAAE,QAAA,CAAA,MAAA,EAAM,CAAvB,CAAO,CAAP,CAEFC,CAAAA,iBAAiB,CAAjBA,GAAAA,CAAAA,OAAAA,EACA,MAAO,CACLD,MAAM,CAAE,QAAA,CAAA,MAAA,EAAM,CACZC,iBAAiB,CAAjBA,MAAAA,CAAAA,OAAAA,EAFJ,CAAO,CAAP,CApBe,CAAA,CA0BjBC,oBAAoB,CAAE,QAAA,CAAA,oBAAA,EAAA,CAAA,MAAA,KAAA,CA1BL,CAAA,CA2BjBC,oBAAoB,CAAE,QAAA,CAAA,oBAAA,EAAA,CAAA,MAAA,KAAA,CA3BL,CAAA,CA4BjBC,mBAAmB,CAAEC,wCAA2BT,oBA5BlD,EA4BuBS,CA5BJ,CAAnB,CA+BA,GAAMC,CAAAA,cAAc,CAAA,2BAAA,EAAA,CACfC,yCAA4BnB,UAAU,CADvB,KACfmB,CADe,CAApB,OAAoB,CAApB,CAKAC,MAAM,CAANA,IAAAA,CAAAA,cAAAA,EAAAA,OAAAA,CAAoC,SAAA,UAAA,CAAc,CAChDpB,UAAU,CAAVA,UAAU,CAAVA,CAAyB,UAAA,CAAA,MACvBA,CAAAA,UAAU,CAAVA,QAAAA,CAAoBkB,cAAc,CAAdA,UAAc,CAAdA,CAAAA,KAAAA,CAAAA,cAAAA,CADG,SACHA,CAApBlB,CADuB,CAAzBA,CAAAA,CADFoB,CAAAA,EAKA,MAAA,CAAA,UAAA,CACD","sourcesContent":["import getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildNavigation from './getChildNavigation';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nexport default function getNavigation(\n  router,\n  state,\n  dispatch,\n  actionSubscribers,\n  getScreenProps,\n  getCurrentNavigation\n) {\n  const actions = router.getActionCreators(state, null);\n\n  const navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: childKey =>\n      getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: childKey => {\n      const { routes, index } = getCurrentNavigation().state;\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return { remove: () => {} };\n      }\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        },\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation()),\n  };\n\n  const actionCreators = {\n    ...getNavigationActionCreators(navigation.state),\n    ...actions,\n  };\n\n  Object.keys(actionCreators).forEach(actionName => {\n    navigation[actionName] = (...args) =>\n      navigation.dispatch(actionCreators[actionName](...args));\n  });\n\n  return navigation;\n}\n"]},"metadata":{},"sourceType":"script"}