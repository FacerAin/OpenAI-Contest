{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNativeTabView=require(\"react-native-tab-view\");var _createTabNavigator=_interopRequireDefault(require(\"../utils/createTabNavigator\"));var _MaterialTopTabBar=_interopRequireDefault(require(\"../views/MaterialTopTabBar\"));var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-tabs/src/navigators/createMaterialTopTabNavigator.tsx\";var MaterialTabView=function(_React$PureComponent){(0,_inherits2.default)(MaterialTabView,_React$PureComponent);function MaterialTabView(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,MaterialTabView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(MaterialTabView)).call.apply(_getPrototypeOf2,[this].concat(args)));_this._renderLazyPlaceholder=function(props){var LazyPlaceholder=_this.props.lazyPlaceholderComponent;if(LazyPlaceholder!=null){return React.createElement(LazyPlaceholder,(0,_extends2.default)({},props,{__source:{fileName:_jsxFileName,lineNumber:49}}));}return null;};_this._renderTabBar=function(props){var state=_this.props.navigation.state;var route=state.routes[state.index];var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;var tabBarVisible=options.tabBarVisible==null?true:options.tabBarVisible;var _this$props=_this.props,navigation=_this$props.navigation,getLabelText=_this$props.getLabelText,getAccessibilityLabel=_this$props.getAccessibilityLabel,getTestID=_this$props.getTestID,renderIcon=_this$props.renderIcon,onTabPress=_this$props.onTabPress,onTabLongPress=_this$props.onTabLongPress,_this$props$tabBarCom=_this$props.tabBarComponent,TabBarComponent=_this$props$tabBarCom===void 0?_MaterialTopTabBar.default:_this$props$tabBarCom,tabBarPosition=_this$props.tabBarPosition,tabBarOptions=_this$props.tabBarOptions,screenProps=_this$props.screenProps;if(TabBarComponent===null||!tabBarVisible){return null;}return React.createElement(TabBarComponent,(0,_extends2.default)({},tabBarOptions,props,{tabBarPosition:tabBarPosition,screenProps:screenProps,navigation:navigation,getLabelText:getLabelText,getAccessibilityLabel:getAccessibilityLabel,getTestID:getTestID,renderIcon:renderIcon,onTabPress:onTabPress,onTabLongPress:onTabLongPress,__source:{fileName:_jsxFileName,lineNumber:84}}));};return _this;}(0,_createClass2.default)(MaterialTabView,[{key:\"render\",value:function render(){var _this$props2=this.props,getLabelText=_this$props2.getLabelText,getAccessibilityLabel=_this$props2.getAccessibilityLabel,getTestID=_this$props2.getTestID,renderIcon=_this$props2.renderIcon,onTabPress=_this$props2.onTabPress,onTabLongPress=_this$props2.onTabLongPress,screenProps=_this$props2.screenProps,lazyPlaceholderComponent=_this$props2.lazyPlaceholderComponent,tabBarComponent=_this$props2.tabBarComponent,tabBarOptions=_this$props2.tabBarOptions,navigation=_this$props2.navigation,descriptors=_this$props2.descriptors,rest=(0,_objectWithoutProperties2.default)(_this$props2,[\"getLabelText\",\"getAccessibilityLabel\",\"getTestID\",\"renderIcon\",\"onTabPress\",\"onTabLongPress\",\"screenProps\",\"lazyPlaceholderComponent\",\"tabBarComponent\",\"tabBarOptions\",\"navigation\",\"descriptors\"]);var state=navigation.state;var route=state.routes[state.index];var descriptor=descriptors[route.key];var options=descriptor.options;var swipeEnabled=options.swipeEnabled==null?this.props.swipeEnabled:options.swipeEnabled;if(typeof swipeEnabled==='function'){swipeEnabled=swipeEnabled(state);}return React.createElement(_reactNativeTabView.TabView,(0,_extends2.default)({},rest,{navigationState:navigation.state,swipeEnabled:swipeEnabled,renderTabBar:this._renderTabBar,renderLazyPlaceholder:this._renderLazyPlaceholder,__source:{fileName:_jsxFileName,lineNumber:136}}));}}]);return MaterialTabView;}(React.PureComponent);var _default=(0,_createTabNavigator.default)(MaterialTabView);exports.default=_default;","map":{"version":3,"sources":["createMaterialTopTabNavigator.tsx"],"names":["MaterialTabView","React","PureComponent","_renderLazyPlaceholder","LazyPlaceholder","_renderTabBar","state","route","descriptors","descriptor","options","tabBarVisible","navigation","getLabelText","getAccessibilityLabel","getTestID","renderIcon","onTabPress","onTabLongPress","TabBarComponent","tabBarPosition","tabBarOptions","screenProps","lazyPlaceholderComponent","tabBarComponent","rest","swipeEnabled","createTabNavigator"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { TabView, SceneRendererProps } from 'react-native-tab-view';\nimport createTabNavigator, {\n  NavigationViewProps,\n} from '../utils/createTabNavigator';\nimport MaterialTopTabBar from '../views/MaterialTopTabBar';\nimport {\n  NavigationTabProp,\n  NavigationMaterialTabOptions,\n  MaterialTabBarOptions,\n  SceneDescriptorMap,\n} from '../types';\n\ntype Route = {\n  key: string;\n  routeName: string;\n};\n\ntype Config = {\n  keyboardDismissMode?: 'none' | 'on-drag';\n  swipeEnabled?: boolean;\n  swipeDistanceThreshold?: number;\n  swipeVelocityThreshold?: number;\n  initialLayout?: { width?: number; height?: number };\n  lazy?: boolean;\n  lazyPlaceholderComponent?: React.ComponentType<{ route: Route }>;\n  tabBarComponent?: React.ComponentType<any>;\n  tabBarOptions?: MaterialTabBarOptions;\n  tabBarPosition?: 'top' | 'bottom';\n  sceneContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype Props = NavigationViewProps &\n  Config & {\n    onSwipeStart?: () => void;\n    onSwipeEnd?: () => void;\n    navigation: NavigationTabProp;\n    descriptors: SceneDescriptorMap;\n    screenProps?: unknown;\n  };\n\nclass MaterialTabView extends React.PureComponent<Props> {\n  _renderLazyPlaceholder = (props: { route: Route }) => {\n    const { lazyPlaceholderComponent: LazyPlaceholder } = this.props;\n\n    if (LazyPlaceholder != null) {\n      return <LazyPlaceholder {...props} />;\n    }\n\n    return null;\n  };\n\n  _renderTabBar = (props: SceneRendererProps) => {\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    const tabBarVisible =\n      options.tabBarVisible == null ? true : options.tabBarVisible;\n\n    const {\n      navigation,\n      getLabelText,\n      getAccessibilityLabel,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n      tabBarComponent: TabBarComponent = MaterialTopTabBar,\n      tabBarPosition,\n      tabBarOptions,\n      screenProps,\n    } = this.props;\n\n    if (TabBarComponent === null || !tabBarVisible) {\n      return null;\n    }\n\n    return (\n      <TabBarComponent\n        {...tabBarOptions}\n        {...props}\n        tabBarPosition={tabBarPosition}\n        screenProps={screenProps}\n        navigation={navigation}\n        getLabelText={getLabelText}\n        getAccessibilityLabel={getAccessibilityLabel}\n        getTestID={getTestID}\n        renderIcon={renderIcon}\n        onTabPress={onTabPress}\n        onTabLongPress={onTabLongPress}\n      />\n    );\n  };\n\n  render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      getLabelText,\n      getAccessibilityLabel,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n      screenProps,\n      lazyPlaceholderComponent,\n      tabBarComponent,\n      tabBarOptions,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      navigation,\n      descriptors,\n      ...rest\n    } = this.props;\n\n    const { state } = navigation;\n    const route = state.routes[state.index];\n\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    let swipeEnabled =\n      // @ts-ignore\n      options.swipeEnabled == null\n        ? this.props.swipeEnabled\n        : (options as any).swipeEnabled;\n\n    if (typeof swipeEnabled === 'function') {\n      swipeEnabled = swipeEnabled(state);\n    }\n\n    return (\n      <TabView\n        {...rest}\n        navigationState={navigation.state}\n        swipeEnabled={swipeEnabled}\n        renderTabBar={this._renderTabBar}\n        renderLazyPlaceholder={this._renderLazyPlaceholder}\n      />\n    );\n  }\n}\n\nexport default createTabNavigator<Config, NavigationMaterialTabOptions, Props>(\n  MaterialTabView\n);\n"]},"metadata":{},"sourceType":"script"}