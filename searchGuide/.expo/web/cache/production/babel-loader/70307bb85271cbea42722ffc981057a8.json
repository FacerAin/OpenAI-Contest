{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var React=_interopRequireWildcard(require(\"react\"));var _View=_interopRequireDefault(require(\"react-native-web/dist/exports/View\"));var _StyleSheet=_interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));var _reactNativeTabView=require(\"react-native-tab-view\");var _reactNativeReanimated=_interopRequireDefault(require(\"react-native-reanimated\"));var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-tabs/src/views/MaterialTopTabBar.tsx\";var TabBarTop=function(_React$PureComponent){(0,_inherits2.default)(TabBarTop,_React$PureComponent);function TabBarTop(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,TabBarTop);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(TabBarTop)).call.apply(_getPrototypeOf2,[this].concat(args)));_this._renderLabel=function(_ref){var route=_ref.route,focused=_ref.focused,color=_ref.color;var _this$props=_this.props,showLabel=_this$props.showLabel,upperCaseLabel=_this$props.upperCaseLabel,labelStyle=_this$props.labelStyle,allowFontScaling=_this$props.allowFontScaling;if(showLabel===false){return null;}var label=_this.props.getLabelText({route:route});if(typeof label==='string'){return React.createElement(_reactNativeReanimated.default.Text,{style:[styles.label,{color:color},labelStyle],allowFontScaling:allowFontScaling,__source:{fileName:_jsxFileName,lineNumber:38}},upperCaseLabel?label.toUpperCase():label);}if(typeof label==='function'){return label({focused:focused,tintColor:color});}return label;};_this._renderIcon=function(_ref2){var route=_ref2.route,focused=_ref2.focused,color=_ref2.color;var _this$props2=_this.props,renderIcon=_this$props2.renderIcon,showIcon=_this$props2.showIcon,iconStyle=_this$props2.iconStyle;if(showIcon===false){return null;}return React.createElement(_View.default,{style:[styles.icon,iconStyle],__source:{fileName:_jsxFileName,lineNumber:62}},renderIcon({route:route,focused:focused,tintColor:color}));};return _this;}(0,_createClass2.default)(TabBarTop,[{key:\"render\",value:function render(){var _this$props3=this.props,navigation=_this$props3.navigation,activeTintColor=_this$props3.activeTintColor,inactiveTintColor=_this$props3.inactiveTintColor,renderIcon=_this$props3.renderIcon,getLabelText=_this$props3.getLabelText,allowFontScaling=_this$props3.allowFontScaling,showLabel=_this$props3.showLabel,showIcon=_this$props3.showIcon,upperCaseLabel=_this$props3.upperCaseLabel,tabBarPosition=_this$props3.tabBarPosition,screenProps=_this$props3.screenProps,iconStyle=_this$props3.iconStyle,rest=(0,_objectWithoutProperties2.default)(_this$props3,[\"navigation\",\"activeTintColor\",\"inactiveTintColor\",\"renderIcon\",\"getLabelText\",\"allowFontScaling\",\"showLabel\",\"showIcon\",\"upperCaseLabel\",\"tabBarPosition\",\"screenProps\",\"iconStyle\"]);return React.createElement(_reactNativeTabView.TabBar,(0,_extends2.default)({},rest,{activeColor:activeTintColor,inactiveColor:inactiveTintColor,navigationState:navigation.state,renderIcon:this._renderIcon,renderLabel:this._renderLabel,__source:{fileName:_jsxFileName,lineNumber:92}}));}}]);return TabBarTop;}(React.PureComponent);exports.default=TabBarTop;TabBarTop.defaultProps={activeTintColor:'rgba(255, 255, 255, 1)',inactiveTintColor:'rgba(255, 255, 255, 0.7)',showIcon:false,showLabel:true,upperCaseLabel:true,allowFontScaling:true};var styles=_StyleSheet.default.create({icon:{height:24,width:24},label:{textAlign:'center',fontSize:13,margin:4,backgroundColor:'transparent'}});","map":{"version":3,"sources":["MaterialTopTabBar.tsx"],"names":["TabBarTop","React","PureComponent","defaultProps","activeTintColor","inactiveTintColor","showIcon","showLabel","upperCaseLabel","allowFontScaling","_renderLabel","route","focused","color","labelStyle","label","styles","tintColor","_renderIcon","renderIcon","iconStyle","navigation","getLabelText","tabBarPosition","screenProps","rest","StyleSheet","icon","height","width","textAlign","fontSize","margin","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TabBar } from 'react-native-tab-view';\nimport Animated from 'react-native-reanimated';\nimport { NavigationRoute } from 'react-navigation';\nimport { MaterialTabBarProps } from '../types';\n\ntype Scene = { route: NavigationRoute; focused: boolean; color: string };\n\nexport default class TabBarTop extends React.PureComponent<\n  MaterialTabBarProps\n> {\n  static defaultProps = {\n    activeTintColor: 'rgba(255, 255, 255, 1)',\n    inactiveTintColor: 'rgba(255, 255, 255, 0.7)',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true,\n  };\n\n  _renderLabel = ({ route, focused, color }: Scene) => {\n    const {\n      showLabel,\n      upperCaseLabel,\n      labelStyle,\n      allowFontScaling,\n    } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const label = this.props.getLabelText({ route });\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          style={[styles.label, { color }, labelStyle]}\n          allowFontScaling={allowFontScaling}\n        >\n          {upperCaseLabel ? label.toUpperCase() : label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({ focused, tintColor: color });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({ route, focused, color }: Scene) => {\n    const { renderIcon, showIcon, iconStyle } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    return (\n      <View style={[styles.icon, iconStyle]}>\n        {renderIcon({\n          route,\n          focused,\n          tintColor: color,\n        })}\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      renderIcon,\n      getLabelText,\n      allowFontScaling,\n      showLabel,\n      showIcon,\n      upperCaseLabel,\n      tabBarPosition,\n      screenProps,\n      iconStyle,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n\n    return (\n      <TabBar\n        {...rest}\n        activeColor={activeTintColor}\n        inactiveColor={inactiveTintColor}\n        navigationState={navigation.state}\n        renderIcon={this._renderIcon}\n        renderLabel={this._renderLabel}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 13,\n    margin: 4,\n    backgroundColor: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}