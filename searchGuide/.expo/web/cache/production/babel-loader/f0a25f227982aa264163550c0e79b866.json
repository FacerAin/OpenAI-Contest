{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _core=require(\"@unimodules/core\");var _invariant=_interopRequireDefault(require(\"invariant\"));var _Dimensions=_interopRequireDefault(require(\"react-native-web/dist/exports/Dimensions\"));function getBasePath(_ref){var httpServerLocation=_ref.httpServerLocation;if(httpServerLocation[0]==='/'){return httpServerLocation.substr(1);}return httpServerLocation;}function getScale(){return _Dimensions.default.get('window').scale;}function getScaledAssetPath(asset){var scale=AssetSourceResolver.pickScale(asset.scales,getScale());var scaleSuffix=scale===1?'':'@'+scale+'x';var assetDir=getBasePath(asset);return assetDir+'/'+asset.name+scaleSuffix+'.'+asset.type;}var AssetSourceResolver=function(){function AssetSourceResolver(serverUrl,jsbundleUrl,asset){(0,_classCallCheck2.default)(this,AssetSourceResolver);this.serverUrl=serverUrl;this.jsbundleUrl=jsbundleUrl;this.asset=asset;}(0,_createClass2.default)(AssetSourceResolver,[{key:\"isLoadedFromServer\",value:function isLoadedFromServer(){return!!this.serverUrl;}},{key:\"isLoadedFromFileSystem\",value:function isLoadedFromFileSystem(){return!!(this.jsbundleUrl&&this.jsbundleUrl.startsWith('file://'));}},{key:\"defaultAsset\",value:function defaultAsset(){if(this.isLoadedFromServer()){return this.assetServerURL();}return this.scaledAssetURLNearBundle();}},{key:\"assetServerURL\",value:function assetServerURL(){(0,_invariant.default)(!!this.serverUrl,'need server to load from');return this.fromSource(this.serverUrl+getScaledAssetPath(this.asset)+'?platform='+_core.Platform.OS+'&hash='+this.asset.hash);}},{key:\"scaledAssetPath\",value:function scaledAssetPath(){return this.fromSource(getScaledAssetPath(this.asset));}},{key:\"scaledAssetURLNearBundle\",value:function scaledAssetURLNearBundle(){var path=this.jsbundleUrl||'file://';return this.fromSource(path+getScaledAssetPath(this.asset));}},{key:\"resourceIdentifierWithoutScale\",value:function resourceIdentifierWithoutScale(){throw new _core.UnavailabilityError('react-native','resourceIdentifierWithoutScale()');}},{key:\"drawableFolderInBundle\",value:function drawableFolderInBundle(){throw new _core.UnavailabilityError('react-native','drawableFolderInBundle()');}},{key:\"fromSource\",value:function fromSource(source){return{__packager_asset:true,width:this.asset.width,height:this.asset.height,uri:source,scale:AssetSourceResolver.pickScale(this.asset.scales,getScale())};}}],[{key:\"pickScale\",value:function pickScale(scales,deviceScale){for(var i=0;i<scales.length;i++){if(scales[i]>=deviceScale){return scales[i];}}return scales[scales.length-1]||1;}}]);return AssetSourceResolver;}();exports.default=AssetSourceResolver;","map":{"version":3,"sources":["../src/AssetSourceResolver.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform, UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\nimport { Dimensions } from 'react-native';\n\ntype PackagerAsset = {\n  __packager_asset: boolean;\n  fileSystemLocation: string;\n  httpServerLocation: string;\n  width?: number;\n  height?: number;\n  scales: number[];\n  hash: string;\n  name: string;\n  type: string;\n};\n\nfunction getBasePath({ httpServerLocation }: PackagerAsset): string {\n  if (httpServerLocation[0] === '/') {\n    return httpServerLocation.substr(1);\n  }\n  return httpServerLocation;\n}\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\nfunction getScale(): number {\n  return Dimensions.get('window').scale;\n}\n\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, getScale());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\nexport default class AssetSourceResolver {\n  serverUrl?: string | null;\n  // where the jsbundle is being run from\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n  isLoadedFromFileSystem(): boolean {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    return this.scaledAssetURLNearBundle();\n  }\n  assetServerURL(): ResolvedAssetSource {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash\n    );\n  }\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getScaledAssetPath(this.asset));\n  }\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    throw new UnavailabilityError('react-native', 'resourceIdentifierWithoutScale()');\n  }\n  drawableFolderInBundle(): ResolvedAssetSource {\n    throw new UnavailabilityError('react-native', 'drawableFolderInBundle()');\n  }\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, getScale()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}