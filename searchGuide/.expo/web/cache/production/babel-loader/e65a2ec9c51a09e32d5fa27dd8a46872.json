{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.createOrReusePropsNode=createOrReusePropsNode;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _findNodeHandle=_interopRequireDefault(require(\"react-native-web/dist/exports/findNodeHandle\"));var _AnimatedNode2=_interopRequireDefault(require(\"./AnimatedNode\"));var _AnimatedEvent=_interopRequireDefault(require(\"./AnimatedEvent\"));var _AnimatedStyle=require(\"./AnimatedStyle\");var _invariant=_interopRequireDefault(require(\"fbjs/lib/invariant\"));var _areEqual=_interopRequireDefault(require(\"fbjs/lib/areEqual\"));var _val=require(\"../val\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function sanitizeProps(inputProps){var props={};for(var key in inputProps){var value=inputProps[key];if(value instanceof _AnimatedNode2.default&&!(value instanceof _AnimatedEvent.default)){props[key]=value.__nodeID;}}return props;}function createOrReusePropsNode(props,callback,oldNode){if(props.style){props=_objectSpread({},props,{style:(0,_AnimatedStyle.createOrReuseStyleNode)(props.style,oldNode&&oldNode._props.style)});}var config=sanitizeProps(props);if(oldNode&&(0,_areEqual.default)(config,oldNode._config)){return oldNode;}return new AnimatedProps(props,config,callback);}var AnimatedProps=function(_AnimatedNode){(0,_inherits2.default)(AnimatedProps,_AnimatedNode);function AnimatedProps(props,config,callback){var _this;(0,_classCallCheck2.default)(this,AnimatedProps);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(AnimatedProps).call(this,{type:'props',props:config},Object.values(props).filter(function(n){return!(n instanceof _AnimatedEvent.default);})));_this._config=config;_this._props=props;_this._callback=callback;_this.__attach();return _this;}(0,_createClass2.default)(AnimatedProps,[{key:\"__onEvaluate\",value:function __onEvaluate(){var props={};for(var key in this._props){var value=this._props[key];if(value instanceof _AnimatedNode2.default){props[key]=value.__getValue();}}return props;}},{key:\"__detach\",value:function __detach(){var nativeViewTag=(0,_findNodeHandle.default)(this._animatedView);(0,_invariant.default)(nativeViewTag!=null,'Unable to locate attached view in the native tree');this._disconnectAnimatedView(nativeViewTag);(0,_get2.default)((0,_getPrototypeOf2.default)(AnimatedProps.prototype),\"__detach\",this).call(this);}},{key:\"update\",value:function update(){this._callback();if(!this._animatedView){return;}(0,_val.val)(this);}},{key:\"setNativeView\",value:function setNativeView(animatedView){if(this._animatedView===animatedView){return;}this._animatedView=animatedView;var nativeViewTag=(0,_findNodeHandle.default)(this._animatedView);(0,_invariant.default)(nativeViewTag!=null,'Unable to locate attached view in the native tree');this._connectAnimatedView(nativeViewTag);}}]);return AnimatedProps;}(_AnimatedNode2.default);","map":{"version":3,"sources":["C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/node_modules/react-native-reanimated/src/core/AnimatedProps.js"],"names":["sanitizeProps","inputProps","props","key","value","AnimatedNode","AnimatedEvent","__nodeID","createOrReusePropsNode","callback","oldNode","style","_props","config","_config","AnimatedProps","type","Object","values","filter","n","_callback","__attach","__getValue","nativeViewTag","_animatedView","_disconnectAnimatedView","animatedView","_connectAnimatedView"],"mappings":"s6BAEA,qEACA,sEACA,8CAEA,qEACA,mEACA,2B,yxBAEA,QAASA,CAAAA,aAAT,CAAuBC,UAAvB,CAAmC,CACjC,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,IAAK,GAAMC,CAAAA,GAAX,GAAkBF,CAAAA,UAAlB,CAA8B,CAC5B,GAAMG,CAAAA,KAAK,CAAGH,UAAU,CAACE,GAAD,CAAxB,CACA,GAAIC,KAAK,WAAYC,uBAAjB,EAAiC,EAAED,KAAK,WAAYE,uBAAnB,CAArC,CAAwE,CACtEJ,KAAK,CAACC,GAAD,CAAL,CAAaC,KAAK,CAACG,QAAnB,CACD,CACF,CACD,MAAOL,CAAAA,KAAP,CACD,CAEM,QAASM,CAAAA,sBAAT,CAAgCN,KAAhC,CAAuCO,QAAvC,CAAiDC,OAAjD,CAA0D,CAC/D,GAAIR,KAAK,CAACS,KAAV,CAAiB,CACfT,KAAK,kBACAA,KADA,EAEHS,KAAK,CAAE,0CACLT,KAAK,CAACS,KADD,CAELD,OAAO,EAAIA,OAAO,CAACE,MAAR,CAAeD,KAFrB,CAFJ,EAAL,CAOD,CACD,GAAME,CAAAA,MAAM,CAAGb,aAAa,CAACE,KAAD,CAA5B,CACA,GAAIQ,OAAO,EAAI,sBAAUG,MAAV,CAAkBH,OAAO,CAACI,OAA1B,CAAf,CAAmD,CACjD,MAAOJ,CAAAA,OAAP,CACD,CACD,MAAO,IAAIK,CAAAA,aAAJ,CAAkBb,KAAlB,CAAyBW,MAAzB,CAAiCJ,QAAjC,CAAP,CACD,C,GAEKM,CAAAA,a,6EACJ,uBAAYb,KAAZ,CAAmBW,MAAnB,CAA2BJ,QAA3B,CAAqC,4DACnC,yGACE,CAAEO,IAAI,CAAE,OAAR,CAAiBd,KAAK,CAAEW,MAAxB,CADF,CAEEI,MAAM,CAACC,MAAP,CAAchB,KAAd,EAAqBiB,MAArB,CAA4B,SAAAC,CAAC,QAAI,EAAEA,CAAC,WAAYd,uBAAf,CAAJ,EAA7B,CAFF,GAIA,MAAKQ,OAAL,CAAeD,MAAf,CACA,MAAKD,MAAL,CAAcV,KAAd,CACA,MAAKmB,SAAL,CAAiBZ,QAAjB,CACA,MAAKa,QAAL,GARmC,aASpC,C,0FAEc,CACb,GAAMpB,CAAAA,KAAK,CAAG,EAAd,CACA,IAAK,GAAMC,CAAAA,GAAX,GAAkB,MAAKS,MAAvB,CAA+B,CAC7B,GAAMR,CAAAA,KAAK,CAAG,KAAKQ,MAAL,CAAYT,GAAZ,CAAd,CACA,GAAIC,KAAK,WAAYC,uBAArB,CAAmC,CACjCH,KAAK,CAACC,GAAD,CAAL,CAAaC,KAAK,CAACmB,UAAN,EAAb,CACD,CACF,CACD,MAAOrB,CAAAA,KAAP,CACD,C,2CAEU,CACT,GAAMsB,CAAAA,aAAa,CAAG,4BAAe,KAAKC,aAApB,CAAtB,CACA,uBACED,aAAa,EAAI,IADnB,CAEE,mDAFF,EAIA,KAAKE,uBAAL,CAA6BF,aAA7B,EACA,oGACD,C,uCAEQ,CACP,KAAKH,SAAL,GAEA,GAAI,CAAC,KAAKI,aAAV,CAAyB,CACvB,OACD,CAED,aAAI,IAAJ,EACD,C,oDAEaE,Y,CAAc,CAC1B,GAAI,KAAKF,aAAL,GAAuBE,YAA3B,CAAyC,CACvC,OACD,CACD,KAAKF,aAAL,CAAqBE,YAArB,CAEA,GAAMH,CAAAA,aAAa,CAAG,4BAAe,KAAKC,aAApB,CAAtB,CACA,uBACED,aAAa,EAAI,IADnB,CAEE,mDAFF,EAIA,KAAKI,oBAAL,CAA0BJ,aAA1B,EACD,C,2BAvDyBnB,sB","sourcesContent":["import { findNodeHandle } from 'react-native';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedEvent from './AnimatedEvent';\nimport { createOrReuseStyleNode } from './AnimatedStyle';\n\nimport invariant from 'fbjs/lib/invariant';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport { val } from '../val';\n\nfunction sanitizeProps(inputProps) {\n  const props = {};\n  for (const key in inputProps) {\n    const value = inputProps[key];\n    if (value instanceof AnimatedNode && !(value instanceof AnimatedEvent)) {\n      props[key] = value.__nodeID;\n    }\n  }\n  return props;\n}\n\nexport function createOrReusePropsNode(props, callback, oldNode) {\n  if (props.style) {\n    props = {\n      ...props,\n      style: createOrReuseStyleNode(\n        props.style,\n        oldNode && oldNode._props.style\n      ),\n    };\n  }\n  const config = sanitizeProps(props);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedProps(props, config, callback);\n}\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, config, callback) {\n    super(\n      { type: 'props', props: config },\n      Object.values(props).filter(n => !(n instanceof AnimatedEvent))\n    );\n    this._config = config;\n    this._props = props;\n    this._callback = callback;\n    this.__attach();\n  }\n\n  __onEvaluate() {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      }\n    }\n    return props;\n  }\n\n  __detach() {\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree'\n    );\n    this._disconnectAnimatedView(nativeViewTag);\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n\n    if (!this._animatedView) {\n      return;\n    }\n\n    val(this);\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree'\n    );\n    this._connectAnimatedView(nativeViewTag);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}