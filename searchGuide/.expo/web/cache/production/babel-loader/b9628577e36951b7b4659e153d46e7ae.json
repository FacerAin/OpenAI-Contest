{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _findNodeHandle=_interopRequireDefault(require(\"react-native-web/dist/exports/findNodeHandle\"));var _expoConstants=_interopRequireDefault(require(\"expo-constants\"));var _validatorState=require(\"./validatorState\");_findNodeHandle.default;if((0,_validatorState.shouldThrowAnErrorOutsideOfExpo)()&&(!_expoConstants.default||!_expoConstants.default.expoVersion)){throw new Error(\"The Expo SDK requires Expo to run. It appears the native Expo modules are unavailable and this code is not running on Expo. Visit https://docs.expo.io to learn more about developing an Expo project.\");}","map":{"version":3,"sources":["../../src/environment/validate.fx.ts"],"names":[],"mappings":"uLAKA,qEAEA,gDAEA,wBAEA,GAAI,wDAAsC,CAAC,sBAAD,EAAc,CAAC,uBAAU,WAA/D,CAAJ,CAAiF,CAC/E,KAAM,IAAI,CAAA,KAAJ,0MAAN,CAGD","sourcesContent":["import {\n  // React Native's internal InitializeCore module sets up `window` but runs only when its React\n  // renderer is loaded. We can cause this by loading one of its dependents.\n  findNodeHandle,\n} from 'react-native';\nimport Constants from 'expo-constants'; // eslint-disable-line no-unused-expressions\n\nimport { shouldThrowAnErrorOutsideOfExpo } from './validatorState';\n\nfindNodeHandle; // eslint-disable-line no-unused-expressions\n\nif (shouldThrowAnErrorOutsideOfExpo() && (!Constants || !Constants.expoVersion)) {\n  throw new Error(\n    `The Expo SDK requires Expo to run. It appears the native Expo modules are unavailable and this code is not running on Expo. Visit https://docs.expo.io to learn more about developing an Expo project.`\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}