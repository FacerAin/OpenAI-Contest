{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=interpolate;exports.Extrapolate=void 0;var _operators=require(\"../operators\");var _AnimatedCond=require(\"../core/AnimatedCond\");var _invariant=_interopRequireDefault(require(\"fbjs/lib/invariant\"));var _AnimatedNode=_interopRequireDefault(require(\"../core/AnimatedNode\"));function interpolateInternalSingle(value,inputRange,outputRange,offset){var inS=inputRange[offset];var inE=inputRange[offset+1];var outS=outputRange[offset];var outE=outputRange[offset+1];var progress=(0,_operators.divide)((0,_operators.sub)(value,inS),(0,_operators.sub)(inE,inS));return(0,_operators.add)(outS,(0,_operators.multiply)(progress,(0,_operators.sub)(outE,outS)));}function interpolateInternal(value,inputRange,outputRange){var offset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;if(inputRange.length-offset===2){return interpolateInternalSingle(value,inputRange,outputRange,offset);}return(0,_AnimatedCond.createAnimatedCond)((0,_operators.lessThan)(value,inputRange[offset+1]),interpolateInternalSingle(value,inputRange,outputRange,offset),interpolateInternal(value,inputRange,outputRange,offset+1));}var Extrapolate={EXTEND:'extend',CLAMP:'clamp',IDENTITY:'identity'};exports.Extrapolate=Extrapolate;function checkNonDecreasing(name,arr){for(var i=1;i<arr.length;++i){if(arr[i]instanceof _AnimatedNode.default||arr[i-1]instanceof _AnimatedNode.default)continue;(0,_invariant.default)(arr[i]>=arr[i-1],'%s must be monotonically non-decreasing. (%s)',name,arr);}}function checkMinElements(name,arr){(0,_invariant.default)(arr.length>=2,'%s must have at least 2 elements. (%s)',name,arr);}function checkValidNumbers(name,arr){for(var i=0;i<arr.length;i++){if(arr[i]instanceof _AnimatedNode.default)continue;(0,_invariant.default)(Number.isFinite(arr[i]),'%s cannot include %s. (%s)',name,arr[i],arr);}}function interpolate(value,config){var inputRange=config.inputRange,outputRange=config.outputRange,_config$extrapolate=config.extrapolate,extrapolate=_config$extrapolate===void 0?Extrapolate.EXTEND:_config$extrapolate,extrapolateLeft=config.extrapolateLeft,extrapolateRight=config.extrapolateRight;checkMinElements('inputRange',inputRange);checkValidNumbers('inputRange',inputRange);checkMinElements('outputRange',outputRange);checkValidNumbers('outputRange',outputRange);checkNonDecreasing('inputRange',inputRange);(0,_invariant.default)(inputRange.length===outputRange.length,'inputRange and outputRange must be the same length.');var left=extrapolateLeft||extrapolate;var right=extrapolateRight||extrapolate;var output=interpolateInternal(value,inputRange,outputRange);if(left===Extrapolate.EXTEND){}else if(left===Extrapolate.CLAMP){output=(0,_AnimatedCond.createAnimatedCond)((0,_operators.lessThan)(value,inputRange[0]),outputRange[0],output);}else if(left===Extrapolate.IDENTITY){output=(0,_AnimatedCond.createAnimatedCond)((0,_operators.lessThan)(value,inputRange[0]),value,output);}if(right===Extrapolate.EXTEND){}else if(right===Extrapolate.CLAMP){output=(0,_AnimatedCond.createAnimatedCond)((0,_operators.greaterThan)(value,inputRange[inputRange.length-1]),outputRange[outputRange.length-1],output);}else if(right===Extrapolate.IDENTITY){output=(0,_AnimatedCond.createAnimatedCond)((0,_operators.greaterThan)(value,inputRange[inputRange.length-1]),value,output);}return output;}","map":{"version":3,"sources":["C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/node_modules/react-native-reanimated/src/derived/interpolate.js"],"names":["interpolateInternalSingle","value","inputRange","outputRange","offset","inS","inE","outS","outE","progress","interpolateInternal","length","Extrapolate","EXTEND","CLAMP","IDENTITY","checkNonDecreasing","name","arr","i","AnimatedNode","checkMinElements","checkValidNumbers","Number","isFinite","interpolate","config","extrapolate","extrapolateLeft","extrapolateRight","left","right","output"],"mappings":"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","sourcesContent":["import {\n  lessThan,\n  multiply,\n  sub,\n  add,\n  divide,\n  greaterThan,\n} from '../operators';\n\nimport { createAnimatedCond as cond } from '../core/AnimatedCond';\nimport invariant from 'fbjs/lib/invariant';\nimport AnimatedNode from '../core/AnimatedNode';\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  const inS = inputRange[offset];\n  const inE = inputRange[offset + 1];\n  const outS = outputRange[offset];\n  const outE = outputRange[offset + 1];\n  const progress = divide(sub(value, inS), sub(inE, inS));\n  return add(outS, multiply(progress, sub(outE, outS)));\n}\n\nfunction interpolateInternal(value, inputRange, outputRange, offset = 0) {\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n  return cond(\n    lessThan(value, inputRange[offset + 1]),\n    interpolateInternalSingle(value, inputRange, outputRange, offset),\n    interpolateInternal(value, inputRange, outputRange, offset + 1)\n  );\n}\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity',\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (let i = 1; i < arr.length; ++i) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode)\n      continue;\n    invariant(\n      arr[i] >= arr[i - 1],\n      '%s must be monotonically non-decreasing. (%s)',\n      name,\n      arr\n    );\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(\n    arr.length >= 2,\n    '%s must have at least 2 elements. (%s)',\n    name,\n    arr\n  );\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode) continue;\n    invariant(\n      Number.isFinite(arr[i]),\n      '%s cannot include %s. (%s)',\n      name,\n      arr[i],\n      arr\n    );\n  }\n}\n\nexport default function interpolate(value, config) {\n  const {\n    inputRange,\n    outputRange,\n    extrapolate = Extrapolate.EXTEND,\n    extrapolateLeft,\n    extrapolateRight,\n  } = config;\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(\n    inputRange.length === outputRange.length,\n    'inputRange and outputRange must be the same length.'\n  );\n\n  const left = extrapolateLeft || extrapolate;\n  const right = extrapolateRight || extrapolate;\n  let output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.EXTEND) {\n  } else if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.EXTEND) {\n  } else if (right === Extrapolate.CLAMP) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      outputRange[outputRange.length - 1],\n      output\n    );\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      value,\n      output\n    );\n  }\n\n  return output;\n}\n"]},"metadata":{},"sourceType":"script"}