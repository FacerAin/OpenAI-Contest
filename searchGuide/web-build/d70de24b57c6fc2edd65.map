{"version":3,"sources":["C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/reducers/search.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/PromptSearch/PromptSearchRate.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/lib/filter.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/web-build/register-service-worker.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/App.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/Main/Main.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/AppTabContainer/AppTabContainer.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/Home/Home.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/SearchBar/SearchBar.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/lib/api.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/lib/readTest.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/lib/sqlite.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/SearchCard/SearchCard.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/assets/img/naver-logo.png","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/assets/img/google-logo.png","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/assets/img/namu-logo.png","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/assets/img/facebook-logo.png","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/assets/img/wiki-logo.png","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/assets/img/youtube-logo.png","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/assets/img/etc-logo.png","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/PromptSearch/PromptSearch.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/Rate/Rate.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/RateSentence/RateSentence.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/RateBar/RateBar.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/RateLine/RateLine.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/lib/scoring.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/components/Loading/Loading.js","C:/Users/bluej/Desktop/2_2/searchGuide/searchGuide/reducers/Store.js"],"names":["LOAD","CHANGE","SUCCESS","FAILURE","START","text","type","dispatch","async","sqlite","select","past","map","elem","score","sendSearch","nativeEvent","response","tempScore","scoring","return_data","full","insert","result","console","log","initialState","query","searchResults","isLoading","pastScore","ToggleLoading","state","action","PromptSearchRate","style","alignItems","styles","Text","StyleSheet","create","fontSize","color","specificURL","filter","JSONdata","sort","a","b","confidence","slicedata","Object","keys","slice","reduce","key","tempResult","values","forEach","data","title","length","passage","url","indexOf","site","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","Provider","store","Store","Main","connect","search","AppTabNavigator","createMaterialTopTabNavigator","Home","Rate","initialRouteName","tabBarPosition","tabBarOptions","activeTintColor","inactiveTintColor","indicatorStyle","backgroundColor","allowFontScaling","showIcon","tabStyle","height","labelStyle","margin","padding","iconStyle","createAppContainer","flex","marginBottom","searchResult","index","content","metric","Math","round","HomeContainer","navigationOptions","tabBarIcon","tintColor","name","marginLeft","size","voiceRecognition","Alert","alert","onPress","SearchBar","change","submit","placeholder","onChangeText","value","icon","onIconPress","onSubmitEditing","axios","require","searchText","Promise","resolve","reject","headers","replace","method","clearTimeout","timer","Error","setTimeout","testResult","test","db","openDatabase","transaction","tx","executeSql","rejects","rows","_array","err","module","exports","SearchIcon","props","source","image","width","borderRadius","marginTop","marginRight","Title","left","Content","Actions","flexDirection","justifyContent","fontStyle","mode","Linking","openURL","FirstSlide","slide1","subtext","SecondSlide","slide2","ThirdSlide","slide3","LastSlide","slide4","PromptSearch","wrapper","showsButtons","loop","activeDotColor","nextButton","prevButton","container","fontWeight","RateContainer","SentenceInfo","infoText","RateSentence","originalText","fixedText","keywordText","useState","count","setCount","surface","onTouchStart","elevation","textAlign","RateBar","click","setClick","msg","colorContainer","textContainer","colorA","colorB","StackedBarChart","keyword","svg","onPressIn","onPressOut","korean","fix","rest","colors","showGrid","horizontal","contentInset","top","valueAccessor","item","infoContainer","visible","position","right","RateLine","load","useEffect","scoreContainer","detail","new","assistance","lenNeed","morps","needMorp","lenNoNeed","noNeedMorp","exec","origin_html","fixScore","keywordScore","getComment","zIndex","Dimensions","get","display","paddingBottom","transparent","animationType","combineReducers","createStore","applyMiddleware","ReduxThunk"],"mappings":"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","file":"static/js/app.1eb652a9.chunk.js","sourcesContent":["import {sendSearch} from '../lib/api'\r\nimport {Alert} from 'react-native'\r\nimport {readTest} from '../lib/readTest';\r\nimport sqlite from '../lib/sqlite';\r\n\r\nconst LOAD = 'search/LOAD';\r\nconst CHANGE = 'search/CHANGE';\r\nconst SUCCESS = 'search/SUCCESS';\r\nconst FAILURE = 'search/FAILURE';\r\nconst START = 'search/START';\r\n\r\nexport const change = (text) => ({ \r\n    type: CHANGE,\r\n    text,\r\n})\r\n\r\nexport const load = () => async (dispatch) =>{\r\n    let past = await sqlite.select();\r\n    past = await past.map( elem => elem.score );\r\n    dispatch({type:LOAD, past: past})\r\n}\r\n\r\nexport const submit = (text) => async (dispatch) => { \r\n    dispatch( {type:START});\r\n    try{\r\n        const response = await sendSearch(text.nativeEvent.text);\r\n        let tempScore = scoring(response.return_data).full;\r\n        await sqlite.insert(tempScore);\r\n        let past = await sqlite.select();\r\n        past = past.map( elem => elem.score );\r\n        //dispatch( { type:SUCCESS, result:response }\r\n        dispatch( { type:SUCCESS, result:response, past: past})\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n        /* Alert.alert(\r\n            'error',\r\n            [\r\n                {text: '확인', onPress: () => {}},\r\n            ],\r\n        ) */\r\n        dispatch({ type:FAILURE })\r\n    }\r\n}\r\n\r\n\r\nconst initialState = {\r\n    query: '',\r\n    result: {\r\n        return_data: {\r\n            searchResults: []\r\n        }   \r\n    },\r\n    isLoading: false,\r\n    pastScore: [10,10,10,10,10,10],\r\n};\r\n   \r\nexport default ToggleLoading = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE:\r\n            return {...state, query: action.text};\r\n        case SUCCESS:\r\n            return {...state, isLoading:false,result: action.result, pastScore: action.past};\r\n        case FAILURE:\r\n            return {...state, isLoading:false};\r\n        case START:\r\n            return {...state, query:'',isLoading:true}\r\n        case LOAD:\r\n            return {...state,pastScore: action.past}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Text } from 'react-native-paper';\r\nimport { StyleSheet,View } from 'react-native';\r\n\r\nexport default PromptSearchRate = () => (\r\n    <View style={{alignItems:'center'}}>\r\n        <Text  style={styles.Text}>아직까지 검색</Text>\r\n        <Text  style={styles.Text}>결과가 없습니다!</Text>\r\n    </View>\r\n)\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    Text:{\r\n        fontSize: 20,\r\n        color: '#123422'\r\n    },\r\n\r\n});","const specificURL = [ 'naver.com', 'google.com', 'namu.wiki', 'facebook.com', 'ko.wikipedia.org','youtube.com' ];\r\n\r\nexport default filter = (JSONdata) => {\r\n    JSONdata.return_data.searchResults.sort( ( a, b ) => {\r\n        return a.confidence > b.confidence ? -1 : a.confidence < b.confidence ? 1 : 0;  \r\n    })\r\n    slicedata = Object.keys( JSONdata.return_data.searchResults ).slice( 0, 10 ).reduce( (result, key ) => {\r\n        result[ key ] = JSONdata.return_data.searchResults[ key ]\r\n        return result\r\n    }, {} );\r\n\r\n    let tempResult = Object.values( slicedata );\r\n    tempResult.forEach( ( data ) => {\r\n        if( data.title.length > 14 ) {\r\n            data.title = data.title.slice( 0, 15 ) + \"..\";\r\n        }\r\n        if( data.passage.length > 125 ) {\r\n            data.passage = data.passage.slice( 0, 125 ) + \"..\";\r\n        }\r\n        specificURL.forEach( ( url ) => {\r\n            if( data.url.indexOf( url ) !== -1 ) {\r\n                data.site = url;\r\n            }\r\n        });\r\n        if( !data.site ) {\r\n            data.site = \"etc\";\r\n        }\r\n    });\r\n    return ( {...JSONdata, return_data: { ...JSONdata.return_data, searchResults: tempResult } } );\r\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import React from 'react';\nimport Main from './components/Main/Main'\nimport { Provider,connect } from 'react-redux';\nimport Store from './reducers/Store';\n\nconst App = () => {\n      return (\n        <Provider store={Store}>\n          <Main />\n        </Provider>\n      )\n}\n\nexport default App;","import React from 'react';\r\nimport AppTabContainer from '../AppTabContainer/AppTabContainer';\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst Main = ({ isLoading}) => {\r\n    return (\r\n        <>\r\n        { isLoading && (<Loading />) } \r\n        <AppTabContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nconst MainContainer = ({isLoading}) => {\r\n    return(<Main isLoading={isLoading} />)\r\n}\r\n  \r\nexport default connect(\r\n    ({search})=>({isLoading:search.isLoading})\r\n)(MainContainer);","import React from 'react';\r\nimport { DARK_MAIN,LIGHT_MAIN, WHITE_MAIN} from 'react-native-dotenv';\r\nimport {createAppContainer} from 'react-navigation';  \r\nimport {createMaterialTopTabNavigator} from 'react-navigation-tabs';\r\nimport Home from '../Home/Home';\r\nimport Rate from '../Rate/Rate';\r\n\r\n\r\nconst AppTabNavigator = createMaterialTopTabNavigator (\r\n    {\r\n        Home: Home,\r\n        Rate: Rate\r\n    },\r\n    {\r\n        initialRouteName: 'Home',\r\n        tabBarPosition: 'bottom',\r\n        tabBarOptions:{\r\n            activeTintColor: WHITE_MAIN,\r\n            inactiveTintColor: DARK_MAIN,\r\n            indicatorStyle: {\r\n                backgroundColor: WHITE_MAIN,\r\n            },\r\n            style:{\r\n                backgroundColor:LIGHT_MAIN,\r\n                allowFontScaling : 'true'\r\n            },\r\n            showIcon: true,\r\n            tabStyle: {\r\n                height: 60,\r\n            },\r\n            labelStyle :{\r\n                margin : 0, \r\n                padding : 0,\r\n                fontSize: 15,\r\n            },\r\n            iconStyle :{\r\n                margin : 0, \r\n                padding : 0,\r\n            }\r\n        },\r\n    }\r\n);\r\nconst AppTabContainer = createAppContainer(AppTabNavigator);\r\nexport default AppTabContainer;","import React from 'react';\r\nimport { View, ScrollView,Text } from 'react-native';\r\nimport {connect} from 'react-redux'\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport SearchCard from '../SearchCard/SearchCard';\r\nimport PromptSearch from '../PromptSearch/PromptSearch'\r\n\r\n\r\nconst Home = ({searchResults}) => {\r\n    return(\r\n        <View style={{flex: 1, backgroundColor:'#eee', margin:0,padding:0}}>\r\n            <SearchBar />\r\n            <ScrollView style={{marginBottom:10}}>\r\n            {searchResults.length ? ( searchResults.map((searchResult, index) => (\r\n                <SearchCard \r\n                key={index} \r\n                title={searchResult.title} \r\n                content={searchResult.passage} \r\n                url={searchResult.url} \r\n                metric={Math.round(searchResult.confidence * 100)} \r\n                site={searchResult.site}\r\n                />))) : <PromptSearch />}\r\n            </ScrollView>\r\n        </View>   \r\n    )\r\n}\r\n\r\nconst HomeContainer = ({searchResults}) => {\r\n    return(<Home searchResults={searchResults} />)\r\n}\r\n\r\nHomeContainer.navigationOptions={\r\n    title:'검색',\r\n    tabBarIcon: ({tintColor}) => (<Icon name=\"search\"  color={tintColor} style={{marginLeft:2}} size={20} />),\r\n}\r\n\r\nexport default connect(\r\n    ({search})=>({\r\n        searchResults:search.result.return_data.searchResults\r\n    })\r\n)(HomeContainer);","import React from 'react';\r\nimport {View,Alert} from 'react-native';\r\nimport { Searchbar } from 'react-native-paper';\r\nimport { connect } from 'react-redux';\r\nimport {change, submit} from '../../reducers/search';\r\n\r\n\r\nconst voiceRecognition = () => {\r\n    Alert.alert(\r\n        '음성 인식',\r\n        '아직 구현 못함',\r\n        [\r\n            {text: '확인', onPress: () => {}},\r\n        ],\r\n    )\r\n};\r\n\r\nconst SearchBar = ({ query, change, submit }) => {\r\n    return(\r\n        <>\r\n        <View>\r\n            <Searchbar\r\n            placeholder=\"검색할 질문을 입력하세요.\"\r\n            onChangeText={change}\r\n            value={query}\r\n            icon='microphone'\r\n            onIconPress={voiceRecognition}\r\n            onSubmitEditing={submit}\r\n            />\r\n        </View>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nconst SearchBarContainer = ({ query, change, submit }) => {\r\n    return(<SearchBar query={query} change={change} submit={submit}  />)\r\n};\r\n\r\nexport default connect(\r\n    ({search})=> ({\r\n        query: search.query\r\n    }),\r\n    {\r\n        change,submit\r\n    }\r\n)(SearchBarContainer);","const axios = require('axios')\r\nimport filter from './filter';\r\n\r\nexport const sendSearch = async(searchText) => {\r\n    return new Promise((resolve,reject) => {\r\n      if(searchText=== \"\" || searchText.length > 30 ){\r\n        resolve({ \"return_code\" : -1, \"error_code\": \"검색 단어를 확인해 주세요!\" });\r\n      } else{\r\n        axios(\r\n          {\r\n            headers: {\r\n              \"Accept\": \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            url: 'http://34.84.91.190:80/api/cliConnection',\r\n            data: {\r\n              data:{\r\n                text: searchText.replace(/\\s{1,}/g,' ')\r\n              }\r\n            },\r\n            method: \"POST\",\r\n          }\r\n        )\r\n        .then((response)=>{\r\n          resolve(filter(response.data))\r\n          clearTimeout(timer);\r\n        })\r\n        .catch(error => {\r\n          clearTimeout(timer);\r\n          throw new Error(error);\r\n        });\r\n      }\r\n      let timer = setTimeout( () => {\r\n          throw new Error( \"time out\" );} ,10000)\r\n    })\r\n}","import test from '../assets/test.json'\r\nimport filter from './filter';\r\n\r\nexport const readTest = () => {\r\n    let testResult = test;\r\n    return filter(testResult);\r\n}","import * as SQLite from 'expo-sqlite';\r\nimport { openDatabase,transaction,executeSql } from 'expo-sqlite';\r\n\r\n\r\nlet sqlite = {};\r\nlet db = openDatabase(\"score.db\");\r\ndb.transaction( ( tx ) => {\r\n    tx.executeSql(`CREATE TABLE IF NOT EXISTS district (id int AUTO_INCREMENT,score int, PRIMARY KEY (id));`);\r\n});\r\n\r\nsqlite.insert = ( score ) => {\r\n    db.transaction( ( tx ) => {\r\n        tx.executeSql( `INSERT INTO district (score) VALUES (${score});` );\r\n    });\r\n}\r\n\r\n\r\nsqlite.select = ( ) => {\r\n    return new Promise( (resolve ,rejects)=>{\r\n        db.transaction( ( tx ) => {\r\n            tx.executeSql( `SELECT score FROM district WHERE 1 ORDER BY id DESC LIMIT 5;`, [], ( tx, result ) => {\r\n                resolve(result.rows._array);\r\n            }, ( err )=>{\r\n                console.log(\"err -> \",err);\r\n            });\r\n        });\r\n    })\r\n    \r\n}\r\n\r\nmodule.exports = sqlite;","import React from 'react';\r\nimport { DARK_MAIN,LIGHT_MAIN, WHITE_MAIN} from 'react-native-dotenv';\r\nimport { Avatar, Button, Card, Title, Paragraph, Text } from 'react-native-paper';\r\nimport {Linking, Image, StyleSheet } from 'react-native';\r\n\r\nconst SearchIcon = (props) => {\r\n  switch(props.site){\r\n    case 'naver.com':\r\n      return(<Image source={require('../../assets/img/naver-logo.png')} style={styles.image}/>)\r\n    case 'google.com':\r\n      return(<Image source={require('../../assets/img/google-logo.png')} style={styles.image}/>)\r\n    case 'namu.wiki':\r\n      return(<Image source={require('../../assets/img/namu-logo.png')} style={styles.image}/>)\r\n    case 'facebook.com':\r\n      return(<Image source={require('../../assets/img/facebook-logo.png')} style={styles.image}/>)\r\n    case 'ko.wikipedia.org':\r\n      return(<Image source={require('../../assets/img/wiki-logo.png')} style={styles.image}/>)\r\n    case 'youtube.com':\r\n      return(<Image source={require('../../assets/img/youtube-logo.png')} style={styles.image}/>)\r\n    default:\r\n      return(<Image source={require('../../assets/img/etc-logo.png')} style={styles.image}/>)\r\n  }\r\n}\r\n  \r\n\r\n\r\nconst SearchCard = (props) => (\r\n  <Card style={{marginTop:10, marginLeft:10, marginRight:10}}>\r\n    <Card.Title title={props.title}\r\n    left={ () => ( <SearchIcon site={props.site} /> ) } />\r\n    <Card.Content>\r\n      <Paragraph>{props.content}</Paragraph>\r\n    </Card.Content>\r\n    <Card.Actions style={{flexDirection:'row', justifyContent:'space-between'}}>\r\n        <Text style={{marginTop:7, marginLeft: 10,fontStyle:'italic'}}>정확도 : {props.metric}%</Text>\r\n        <Button mode='contained' color= {LIGHT_MAIN} labelStyle={{color:WHITE_MAIN}} onPress={()=>{Linking.openURL(props.url)}}>\r\n        자세히보기\r\n        </Button>\r\n    </Card.Actions>\r\n  </Card>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  image:{\r\n    width: 45,\r\n    height: 45,\r\n    borderRadius: 100\r\n  }\r\n});\r\n\r\n\r\nexport default SearchCard;","module.exports = __webpack_public_path__ + \"static/media/naver-logo.c0d68dc7.png\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.76b5ed69.png\";","module.exports = __webpack_public_path__ + \"static/media/namu-logo.8eeb3bde.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook-logo.d133b91c.png\";","module.exports = __webpack_public_path__ + \"static/media/wiki-logo.b8d7a6a5.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube-logo.02f39dff.png\";","module.exports = __webpack_public_path__ + \"static/media/etc-logo.23a5f7b0.png\";","import React from 'react';\r\nimport { View,Text, StyleSheet, Button,Alert } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport Swiper from 'react-native-swiper';\r\nimport { DARK_MAIN,LIGHT_MAIN, WHITE_MAIN} from 'react-native-dotenv';\r\n\r\nconst FirstSlide = () => (\r\n    <View style={styles.slide1} >\r\n        <Icon name='search' style={styles.icon} size={50} />\r\n        <Text style={styles.text}>당신이 궁금해하는</Text>\r\n        <Text style={styles.text}>질문을 검색하세요</Text>\r\n        <Text style={styles.subtext}>길잡이가 당신의</Text>\r\n        <Text style={styles.subtext}>질문을 이해할거에요</Text>\r\n    </View>\r\n)\r\nconst SecondSlide = () => (\r\n    <View style={styles.slide2} >\r\n        <Icon name='search' style={styles.icon} size={50} />\r\n        <Text style={styles.text}>길잡이가 수정한</Text>\r\n        <Text style={styles.text}>검색 문장을 확인하세요</Text>\r\n        <Text style={styles.subtext}>길잡이는 항상 최적의</Text>\r\n        <Text style={styles.subtext}>검색키워드를 제안합니다</Text>\r\n    </View>\r\n)\r\nconst ThirdSlide = () => (\r\n    <View style={styles.slide3} >\r\n        <Icon name='search' style={styles.icon} size={50} />\r\n        <Text style={styles.text}>검색 점수와 그래프로</Text>\r\n        <Text style={styles.text}>검색능력을 체크하세요</Text>\r\n        <Text style={styles.subtext}>길잡이는 당신의</Text>\r\n        <Text style={styles.subtext}>검색능력 향상시킵니다</Text>\r\n    </View>\r\n)\r\nconst LastSlide = () => (\r\n    <View style={styles.slide4} >\r\n        <Icon name='search' style={styles.icon} size={50} />\r\n        <Text style={styles.text}>내 손 안의 검색 도우미</Text>\r\n        <Text style={styles.text}>길잡이에서</Text>\r\n        <Text style={styles.text}>검색을 시작하세요</Text>\r\n    </View>\r\n)\r\n\r\nexport default PromptSearch = () => {\r\n    return(\r\n        <>\r\n        <Swiper style={styles.wrapper} \r\n        showsButtons={true} \r\n        loop={false} height={400}\r\n        activeDotColor={LIGHT_MAIN}\r\n        nextButton={<Text style={{color:'#3BAD87', fontSize:60}}>›</Text>}\r\n        prevButton={<Text style={{color:'#3BAD87', fontSize:60}}>‹</Text>}\r\n        >\r\n            <FirstSlide />\r\n            <SecondSlide />\r\n            <ThirdSlide />\r\n            <LastSlide />\r\n        </Swiper>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      width: '100%',\r\n      alignItems: 'center',\r\n      justifyContent:'center',\r\n    },\r\n    text:{\r\n        marginBottom: 10,\r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color:'#999999',\r\n    },\r\n    icon: {\r\n        marginBottom: 20,\r\n        color: '#999999'\r\n    },\r\n    subtext:{\r\n        marginBottom: 10,\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color:'#999999',\r\n    },\r\n    wrapper: {\r\n        flex:1,\r\n    },\r\n    slide1: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: '#eee',\r\n    },\r\n    slide2: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: '#eee',\r\n    },\r\n    slide3: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: '#eee',\r\n    },\r\n    slide4: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#eee',\r\n      },\r\n  });","import React from 'react';\r\nimport { View, Text} from 'react-native';\r\nimport {connect} from 'react-redux'\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport RateSentence from '../RateSentence/RateSentence';\r\nimport RateBar from '../RateBar/RateBar';\r\nimport RateLine from '../RateLine/RateLine';\r\nimport scoring from '../../lib/scoring';\r\n\r\nconst Rate = ({score}) => {\r\n    return(\r\n        <View style={{flex: 1, backgroundColor:'#eee', margin:0,padding:0, justifyContent:'center',alignItems:'center'}}>\r\n            <RateSentence />\r\n            <RateBar score={score}/>\r\n            <RateLine />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst RateContainer = ({score}) => {\r\n    return(<Rate score={score} />)\r\n}\r\n\r\nRateContainer.navigationOptions={\r\n    title:'평가',\r\n   tabBarIcon: ({tintColor})=> (<Icon name=\"bar-chart-o\" color={tintColor}   style={{marginLeft:0.5}} size={20} />),\r\n}\r\n\r\nexport default connect(\r\n    ({search})=>({\r\n        score: scoring(search.result.return_data)\r\n    })\r\n)(RateContainer);","import React,{ useState } from 'react';\r\nimport { Surface, Text } from 'react-native-paper';\r\nimport { StyleSheet,View } from 'react-native';\r\nimport {connect} from 'react-redux';\r\nimport PromptSearchRate from '../PromptSearch/PromptSearchRate';\r\n\r\nconst SentenceInfo = (props) => (\r\n    <View>\r\n        <Text style={[styles.infoText,{color:props.color}]} >{props.info}</Text>\r\n        <Text style={[styles.Text,{color:props.color}]}>{props.Text}</Text>\r\n    </View> \r\n)\r\n\r\nconst RateSentence = ({originalText, fixedText, keywordText }) => {\r\n    const [ count,setCount ] = useState(0);\r\n\r\n    const calCount = () => {\r\n        if(count > 1 || !keywordText) setCount(0);\r\n        else setCount(count+1);\r\n    }\r\n\r\n    return (\r\n        <Surface style={styles.surface} onTouchStart={calCount} >\r\n            { keywordText ?\r\n                <>\r\n                <View>\r\n                    {count == 0 && ( <SentenceInfo Text={originalText} info={'원래 검색  문장'} color={'#B71C1C'} />) }\r\n                    {count == 1 && ( <SentenceInfo Text={fixedText} info={'맞춤법 교정 문장'} color={'#2196F3'} />) }\r\n                    {count == 2 && ( <SentenceInfo Text={keywordText} info={'키워드 교정 문장'} color={'#00a676'} />) }\r\n                </View> \r\n                <View style={{flexDirection:'column-reverse', height:50}}>\r\n                <Text >눌러서 변화 과정을 지켜보세요!</Text>\r\n                </View>\r\n                \r\n                </>\r\n                : <PromptSearchRate />\r\n            }\r\n            \r\n        </Surface>\r\n    )\r\n}\r\n\r\n const styles = StyleSheet.create({\r\n    surface: {\r\n        padding: 8,\r\n        flex: 0.3,\r\n        width: '95%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 2,\r\n        marginTop: 10\r\n    },\r\n    Text:{\r\n        fontSize: 25,\r\n        textAlign:'center'\r\n    },\r\n    infoText:{\r\n        fontSize: 20,\r\n        textAlign:'center'\r\n    }\r\n});\r\n\r\n\r\nconst RateSentenceContainer = ( {originalText, fixedText, keywordText } ) => (\r\n    <RateSentence originalText={originalText} fixedText={fixedText} keywordText={keywordText} />\r\n);\r\n\r\nexport default connect(\r\n    ({search})=>({\r\n        originalText: search.result.return_data.originalText,\r\n        fixedText: search.result.return_data.fixedText,\r\n        keywordText: search.result.return_data.keywordText\r\n    })\r\n)(RateSentenceContainer);","import React,{ useState } from 'react';\r\nimport { Surface, Text ,HelperText} from 'react-native-paper';\r\nimport { StyleSheet,View } from 'react-native';\r\nimport { StackedBarChart  } from 'react-native-svg-charts';\r\nimport PromptSearchRate from '../PromptSearch/PromptSearchRate';\r\n\r\nexport default RateBar = (props) => {\r\n    const [ click,setClick ] = useState(0);\r\n\r\n    return (\r\n        <Surface style={styles.surface}>\r\n            \r\n            {props.score.msg.length ?\r\n            <>\r\n            <View style={styles.container}>\r\n                <Text style={styles.Text}>총 점수 : {props.score.full}</Text>\r\n                <View style={styles.colorContainer}>\r\n                    <View style={styles.textContainer}>\r\n                        <View style={styles.colorA}></View><Text>키워드 점수</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <View style={styles.colorB}></View><Text>맞춤법 점수</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <StackedBarChart  \r\n            data={ [{\r\n                keyword: {\r\n                    value: props.score.key,\r\n                    svg: {\r\n                        onPressIn: () => {setClick(1)},\r\n                        onPressOut: ()=>{setClick(0)}\r\n                    },\r\n                },\r\n                korean: {\r\n                    value: props.score.fix,\r\n                    svg: {\r\n                        onPressIn: () => {setClick(2)},\r\n                        onPressOut: ()=>{setClick(0)}\r\n                    },\r\n                }, \r\n                rest: {\r\n                    value: (100-(props.score.key+props.score.fix)),\r\n                }\r\n            }]} \r\n            style={{height:50, width:'90%'}}\r\n            keys={['keyword','korean','rest']} \r\n            colors={['#ffaa5a','#2cc3c2','#ffffff']}\r\n            showGrid={ false }\r\n            horizontal={ true }\r\n            contentInset={ { top: 10 } }  \r\n            valueAccessor={({ item, key }) => item[key].value}\r\n            /> \r\n            <View style={styles.infoContainer}>\r\n                <HelperText type={'info'} visible={click==1} style={{fontSize:20}}>키워드 : {props.score.key}</HelperText>\r\n                <HelperText type={'info'} visible={click==2} style={{fontSize:20}}>맞춤법 : {props.score.fix}</HelperText>\r\n            </View>\r\n            <Text>눌러서 각각의 점수를 알아보세요!</Text>\r\n            </>\r\n            : <PromptSearchRate />}\r\n        </Surface>\r\n        \r\n     );\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        width: '100%',\r\n        flexDirection:'row',\r\n        justifyContent:'center',\r\n    },\r\n    colorContainer:{\r\n        position:\"absolute\",\r\n        right:0,\r\n    },\r\n    colorA:{\r\n        backgroundColor:'#ffaa5a',\r\n        height: 7,\r\n        width: 7,\r\n        marginRight: 5,\r\n    },\r\n    colorB:{\r\n        backgroundColor:'#2cc3c2',\r\n        height: 7,\r\n        width: 7,\r\n        marginRight: 5,\r\n    },\r\n    textContainer:{\r\n        flexDirection:'row',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    infoContainer:{\r\n        flexDirection:'row',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        width: '100%'\r\n    },\r\n    surface: {\r\n        padding: 8,\r\n        flex: 0.3,\r\n        width: '95%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 2,\r\n        marginTop: 10\r\n    },\r\n    Text:{\r\n        fontSize: 25,\r\n    },\r\n});\r\n","import React, {useEffect} from 'react';\r\nimport { Surface, Text,Divider} from 'react-native-paper';\r\nimport { View,StyleSheet } from 'react-native';\r\nimport {connect} from 'react-redux';\r\nimport {load } from '../../reducers/search';\r\nimport PromptSearchRate from '../PromptSearch/PromptSearchRate';\r\n\r\n\r\nconst RateLine = ({load,pastScore }) => {\r\n    useEffect(()=>{\r\n        const get = async () => {\r\n            await load();\r\n        }\r\n        get();\r\n    }, [load]);\r\n\r\n    return (\r\n        <Surface style={styles.surface}>\r\n            {pastScore.length ? \r\n            <>\r\n                <Text style={styles.info}>최근 점수</Text>\r\n                <View style={styles.scoreContainer}>\r\n                {pastScore.map((elem,index)=> (\r\n                    <Text key={index} style={styles.score}>{elem}</Text>\r\n                ))} \r\n                </View>\r\n                <View style={styles.detail}><Text style={styles.new}>최근</Text><Text></Text></View>\r\n                <Text>당신의 최근 점수 트렌드입니다</Text>\r\n            </>\r\n             : <PromptSearchRate />\r\n            }\r\n        </Surface>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    surface: {\r\n        padding: 8,\r\n        flex: 0.4,\r\n        width: '95%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 2,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    info:{\r\n        fontSize:25,\r\n        fontWeight:'bold',\r\n        marginBottom: 15\r\n    },\r\n    score:{\r\n        fontSize:20\r\n    },\r\n    scoreContainer:{\r\n        flexDirection:'row',\r\n        justifyContent: 'space-around',\r\n        width:'100%'\r\n    },\r\n    detail:{\r\n        width:'100%',\r\n        justifyContent:'space-around',\r\n       \r\n    },\r\n    new:{\r\n        fontSize: 18,\r\n        marginLeft: 20,\r\n        color:'#995432'\r\n    }\r\n});\r\n\r\nconst RateLineContainer = ( {load,pastScore } ) => (\r\n    <RateLine load={load} pastScore={pastScore} />\r\n);\r\n\r\nexport default connect(\r\n    ({search})=>({\r\n        pastScore:search.pastScore\r\n    }),\r\n    {\r\n        load\r\n    }\r\n)(RateLineContainer);","const assistance = [ \r\n    [\"완벽해요!\",\"키워드가 완벽해요!\",\"맞춤법을 신경써주세요.\",\"세종대왕님이 울고 계십니다.\"],\r\n    [\"맞춤법이 완벽해요!\",\"훌륭하지만 맞춤법과 키워드 둘 다 완벽하지는 않네요.\",\"맞춤법이 부족하지만 키워드를 잘 찾으시네요.\",\"세종대왕님이 울고 계십니다.\"],\r\n    [\"키워드를 신경써주세요.\",\"키워드가 부족하지만 맞춤법을 잘 맞추시네요.\",\"키워드와 맞춤법 둘 다 부족하시네요.\",\"둘 다 부족하지만 키워드가 조금 더 낫네요.\"],\r\n    [\"키워드 점수가 많이 부족하십니다.\",\"키워드 점수가 많이 부족하십니다.\",\"둘 다 부족하지만 맞춤법이 조금 더 낫네요.\",\"개선이 많이 필요해 보입니다.\"]\r\n]\r\n\r\nconst getComment = ( fixScore, keywordScore ) => {\r\n    let fixPos, morpPos;\r\n    if( fixScore == 30 ) {\r\n        fixPos = 0;\r\n    } else if( fixScore >= 25 && fixScore < 30 ) {\r\n        fixPos = 1;\r\n    } else if( fixScore >= 15 && fixScore < 25 ) {\r\n        fixPos = 2;\r\n    } else {\r\n        fixPos = 3;\r\n    }\r\n\r\n    if( keywordScore == 70 ) {\r\n        morpPos = 0;\r\n    } else if( keywordScore >= 55 && keywordScore < 69 ) {\r\n        morpPos = 1;\r\n    } else if( keywordScore >= 30 && keywordScore < 54 ){\r\n        morpPos = 2;\r\n    } else {\r\n        morpPos = 3;\r\n    }\r\n    return assistance[morpPos][fixPos];\r\n}\r\n\r\nexport default scoring = ( return_data ) => {\r\n    if(return_data.originalText){\r\n        let Text = return_data.originalText,\r\n        lenNeed = return_data.morps.needMorp.length,\r\n        lenNoNeed = return_data.morps.noNeedMorp.length,\r\n        fixedText;\r\n    try {\r\n        fixedText = /span class=\\'result_underline\\'>(.*?)<\\/span>/g.exec(return_data.korean.origin_html)[1]; \r\n    }\r\n    catch ( err ) {\r\n        fixedText = \"\";\r\n    }\r\n\r\n    let fixScore = Math.round( ( ( Text.length - fixedText.length ) / Text.length ) * 30 ), \r\n        keywordScore = Math.round( lenNeed / ( lenNoNeed + lenNeed ) * 70 ),\r\n        fullScore = fixScore + keywordScore;\r\n\r\n    let comment = getComment(fixScore,keywordScore);\r\n\r\n    return { \"fix\" : fixScore, \"key\" : keywordScore, \"full\" : fullScore, \"msg\" : comment};\r\n    }\r\n    else {\r\n        return { \"fix\" : 0, \"key\" : 0, \"full\" : 0, \"msg\" : ''} ;\r\n    }\r\n}\r\n    ","import React from 'react';\r\nimport {View,ActivityIndicator,StyleSheet,Dimensions, Modal} from 'react-native'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <Modal transparent={true} animationType={'none'}>\r\n            <View style={styles.container}><ActivityIndicator size={80} color=\"#ffffff\" style={styles.icon} /></View>\r\n        </Modal>\r\n      )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    zIndex: 2,\r\n    height: Dimensions.get('window').height + 50,\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent:'center',\r\n    backgroundColor: 'rgba(15,15,15,0.7)',\r\n  },\r\n  icon:{\r\n    paddingBottom: 100,\r\n  }\r\n});\r\n\r\n\r\nexport default Loading;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk'\r\nimport search from './search';\r\n \r\nconst store = combineReducers({ search }); \r\n \r\nexport default createStore(store, applyMiddleware(ReduxThunk) );"],"sourceRoot":""}